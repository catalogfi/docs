{
  "openapi": "3.0.0",
  "info": {
    "title": "Catalog API",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/auth/otp/send": {
      "post": {
        "summary": "Initiate passwordless auth",
        "description": "Initiates passwordless login using email using OTP code",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "useremail@domain.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid email"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Too many OTP requests. Please try again later."
                    },
                    "retry_after": {
                      "type": "integer",
                      "description": "Number of seconds to wait before retrying",
                      "example": 60
                    },
                    "rate_limit_reset": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the rate limit will reset",
                      "example": "2025-01-14T12:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "security": [],
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/auth/otp/verify": {
      "post": {
        "summary": "Authenticate with OTP code",
        "description": "Authenticates user with email and OTP code for passwordless login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "code": {
                    "type": "string",
                    "description": "6-digit OTP code",
                    "example": "123456"
                  },
                  "mode": {
                    "type": "string",
                    "enum": ["login-or-sign-up"],
                    "example": "login-or-sign-up"
                  }
                },
                "required": ["email", "code", "mode"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "did:catalog:cmcvh61po02lul70mgjj4kq21"
                        },
                        "created_at": {
                          "type": "integer",
                          "example": 1752036285
                        },
                        "linked_accounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "email"
                              },
                              "address": {
                                "type": "string",
                                "example": "user@example.com"
                              },
                              "verified_at": {
                                "type": "integer",
                                "example": 1752036285
                              },
                              "first_verified_at": {
                                "type": "integer",
                                "example": 1752036285
                              },
                              "latest_verified_at": {
                                "type": "integer",
                                "example": 1753333327
                              }
                            }
                          }
                        },
                        "mfa_methods": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "has_accepted_terms": {
                          "type": "boolean",
                          "example": true
                        },
                        "is_guest": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication"
                    },
                    "catalog_access_token": {
                      "type": "string",
                      "description": "catalog access token"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "Refresh token for token renewal"
                    },
                    "session_update_action": {
                      "type": "string",
                      "example": "set"
                    },
                    "is_new_user": {
                      "type": "boolean",
                      "description": "Whether this is a new user registration",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid OTP code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Code is expired"
                    },
                    "code": {
                      "type": "string",
                      "example": "invalid_data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid OTP code"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Too many authentication attempts. Please try again later."
                    },
                    "retry_after": {
                      "type": "integer",
                      "description": "Number of seconds to wait before retrying",
                      "example": 60
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "security": [],
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/auth/sessions": {
      "post": {
        "summary": "Refresh session",
        "description": "Refreshes the user session using a refresh token",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "description": "Refresh token for session renewal",
                    "example": "ncqbUutBJFEjL--XkzdvaYeF6f-LCSr-Wm9toyj3AhoaEOwGKQl2qMPJzItQWMA_ZXsOesAjSdYp49YvjcVPWg"
                  }
                },
                "required": ["refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "did:catalog:cmcvh61po02lul70mgjj4kq21"
                        },
                        "created_at": {
                          "type": "integer",
                          "example": 1752036285
                        },
                        "linked_accounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "email"
                              },
                              "address": {
                                "type": "string",
                                "example": "utkarshmishra2001@gmail.com"
                              },
                              "verified_at": {
                                "type": "integer",
                                "example": 1752036285
                              },
                              "first_verified_at": {
                                "type": "integer",
                                "example": 1752036285
                              },
                              "latest_verified_at": {
                                "type": "integer",
                                "example": 1753421515
                              }
                            }
                          }
                        },
                        "mfa_methods": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "has_accepted_terms": {
                          "type": "boolean",
                          "example": true
                        },
                        "is_guest": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "description": "New JWT token for authentication"
                    },
                    "catalog_access_token": {
                      "type": "string",
                      "description": "New catalog access token"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "New refresh token for future renewals"
                    },
                    "session_update_action": {
                      "type": "string",
                      "example": "ignore"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid refresh token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Refresh token expired"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Too many session refresh attempts. Please try again later."
                    },
                    "retry_after": {
                      "type": "integer",
                      "description": "Number of seconds to wait before retrying",
                      "example": 60
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "security": [],
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/apps/{appId}/users/count": {
      "get": {
        "summary": "Get app user count",
        "description": "Retrieves the current user count and user limit for a specific app",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "responses": {
          "200": {
            "description": "User count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_count": {
                      "type": "integer",
                      "description": "Current number of users in the app",
                      "example": 0
                    },
                    "user_limit": {
                      "type": "integer",
                      "description": "Maximum number of users allowed for the app",
                      "example": 150
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/apps/{appId}/secret": {
      "get": {
        "summary": "Get app secrets - Related to app/configuration/settings (basic)",
        "description": "Retrieves app secrets/clients for a specific app. Related to app/configuration/settings (basic)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "responses": {
          "200": {
            "description": "App secrets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Secret/client ID",
                            "example": "dqwbst7cm3x90f46b7ax1yjj"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the secret was created",
                            "example": "2025-07-14T12:05:29.788Z"
                          },
                          "last_four": {
                            "type": "string",
                            "description": "Last four characters of the secret",
                            "example": "KCVQ"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/apps/{appId}/domains": {
      "get": {
        "summary": "Get app domain configuration - Related to app/configuration/settings (domains)",
        "description": "Retrieves domain configuration for a specific app. Related to app/configuration/settings (domains)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Domain configuration status",
                      "example": "pending"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether domain configuration is enabled",
                      "example": true
                    },
                    "base_cookie_domain": {
                      "type": "string",
                      "description": "Base cookie domain",
                      "example": "hashira.io"
                    },
                    "cookie_same_site_lax": {
                      "type": "boolean",
                      "description": "Whether to use SameSite=Lax for cookies",
                      "example": false
                    },
                    "custom_api_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "Custom API URL",
                      "example": null
                    },
                    "cname_record": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "CNAME record status",
                          "example": "pending"
                        },
                        "type": {
                          "type": "string",
                          "description": "DNS record type",
                          "example": "CNAME"
                        },
                        "name": {
                          "type": "string",
                          "description": "DNS record name",
                          "example": "privy"
                        },
                        "value": {
                          "type": "string",
                          "description": "DNS record value",
                          "example": "cmcx1p0y50315i80ldhmlcnmm.api.privy.systems"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      },
      "put": {
        "summary": "Update app domain configuration - Related to app/configuration/settings (domains)",
        "description": "Updates domain configuration for a specific app. Used for enabling/disabling httponly cookies and other domain settings. Related to app/configuration/settings (domains)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cookie_domain": {
                    "type": "string",
                    "description": "Cookie domain to configure",
                    "example": "hashira.io"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable domain configuration",
                    "example": false
                  },
                  "cookie_same_site_lax": {
                    "type": "boolean",
                    "description": "Whether to use SameSite=Lax for cookies",
                    "example": false
                  }
                },
                "required": ["cookie_domain", "enabled", "cookie_same_site_lax"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Domain configuration status",
                      "example": "pending"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether domain configuration is enabled",
                      "example": false
                    },
                    "base_cookie_domain": {
                      "type": "string",
                      "description": "Base cookie domain",
                      "example": "hashira.io"
                    },
                    "cookie_same_site_lax": {
                      "type": "boolean",
                      "description": "Whether to use SameSite=Lax for cookies",
                      "example": false
                    },
                    "custom_api_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "Custom API URL",
                      "example": null
                    },
                    "cname_record": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "CNAME record status",
                          "example": "pending"
                        },
                        "type": {
                          "type": "string",
                          "description": "DNS record type",
                          "example": "CNAME"
                        },
                        "name": {
                          "type": "string",
                          "description": "DNS record name",
                          "example": "privy"
                        },
                        "value": {
                          "type": "string",
                          "description": "DNS record value",
                          "example": "cmcx1p0y50315i80ldhmlcnmm.api.privy.systems"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid domain configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/accounts": {
      "get": {
        "summary": "Get user accounts",
        "description": "Retrieves all accounts associated with the authenticated user",
        "tags": ["Dashboard"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "cmcvhzuqq03a3jp0ngx86i7ce"
                          },
                          "name": {
                            "type": "string",
                            "example": "Hashira"
                          },
                          "admins": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "cmcvhzuqq03a4jp0nh1tq1050"
                                },
                                "created_at": {
                                  "type": "integer",
                                  "example": 1752037675
                                },
                                "role": {
                                  "type": "string",
                                  "example": "admin"
                                },
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "did:catalog:cmcvh61po02lul70mgjj4kq21"
                                    },
                                    "created_at": {
                                      "type": "integer",
                                      "example": 1752036285
                                    },
                                    "linked_accounts": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "email"
                                          },
                                          "address": {
                                            "type": "string",
                                            "example": "user@example.com"
                                          },
                                          "verified_at": {
                                            "type": "integer",
                                            "example": 1752036285
                                          },
                                          "first_verified_at": {
                                            "type": "integer",
                                            "example": 1752036285
                                          },
                                          "latest_verified_at": {
                                            "type": "integer",
                                            "example": 1753421515
                                          }
                                        }
                                      }
                                    },
                                    "mfa_methods": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "has_accepted_terms": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "is_guest": {
                                      "type": "boolean",
                                      "example": false
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "invitedAdmins": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "customJwtAccountEnabled": {
                            "type": "boolean",
                            "example": false
                          },
                          "fiatOnRampEnabled": {
                            "type": "boolean",
                            "example": false
                          },
                          "transactionMfaControlsEnabled": {
                            "type": "boolean",
                            "example": true
                          },
                          "expoSDKEnabled": {
                            "type": "boolean",
                            "example": false
                          },
                          "delegatedActionsEnabled": {
                            "type": "boolean",
                            "example": false
                          },
                          "walletApiEnabled": {
                            "type": "boolean",
                            "example": true
                          },
                          "telegramAuthEnabled": {
                            "type": "boolean",
                            "example": true
                          },
                          "webhooksEnabled": {
                            "type": "boolean",
                            "example": false
                          },
                          "twilioAccountType": {
                            "type": "string",
                            "example": "basic"
                          },
                          "apps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "cmdgxr3b100sfjx0lejx6wldn"
                                },
                                "created_at": {
                                  "type": "integer",
                                  "example": 1753333930
                                },
                                "updated_at": {
                                  "type": "integer",
                                  "example": 1753333930
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Hashira"
                                },
                                "logo_url": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": null
                                },
                                "env": {
                                  "type": "string",
                                  "example": "dev"
                                },
                                "usersCount": {
                                  "type": "integer",
                                  "example": -1
                                },
                                "development_apps": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "production_app": {
                                  "type": "object",
                                  "nullable": true,
                                  "example": null
                                }
                              }
                            }
                          },
                          "created_at": {
                            "type": "integer",
                            "example": 1752037675
                          },
                          "updated_at": {
                            "type": "integer",
                            "example": 1752037675
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/accounts/{accountId}/billing": {
      "get": {
        "summary": "Get account billing information",
        "description": "Retrieves billing information for a specific account",
        "tags": ["Dashboard"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account ID",
            "example": "cmcvhzuqq03a3jp0ngx86i7ce"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "example": "free"
                    },
                    "tierName": {
                      "type": "string",
                      "example": "Free"
                    },
                    "monthlyActiveUsers": {
                      "type": "integer",
                      "example": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "maxMonthlyActiveUsers": {
                      "type": "integer",
                      "example": 1000
                    },
                    "priceCents": {
                      "type": "integer",
                      "example": 0
                    },
                    "nextTier": {
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "example": "dev"
                        },
                        "tierName": {
                          "type": "string",
                          "example": "Core"
                        },
                        "priceCents": {
                          "type": "integer",
                          "example": 19900
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Account not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/accounts/admins": {
      "get": {
        "summary": "Get admin information",
        "description": "Retrieves admin information for the authenticated user",
        "tags": ["Dashboard"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "can_leave": {
                      "type": "boolean",
                      "example": false
                    },
                    "cannot_leave_reason": {
                      "type": "string",
                      "example": "active_apps"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/accounts/{accountId}/apps": {
      "post": {
        "summary": "Create a new app",
        "description": "Creates a new application within the specified account",
        "tags": ["Dashboard"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account ID",
            "example": "cmcvhzuqq03a3jp0ngx86i7ce"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the application",
                    "example": "New App"
                  },
                  "createWebClient": {
                    "type": "boolean",
                    "description": "Whether to create a web client",
                    "example": true
                  },
                  "createMobileClient": {
                    "type": "boolean",
                    "description": "Whether to create a mobile client",
                    "example": true
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "App created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "app": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "cmdie6l1300x2l70jd4hu8f3o"
                        },
                        "name": {
                          "type": "string",
                          "example": "New App"
                        },
                        "logo_url": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "icon_url": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "terms_and_conditions_url": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "privacy_policy_url": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "require_users_accept_terms": {
                          "type": "boolean",
                          "nullable": true,
                          "example": null
                        },
                        "theme": {
                          "type": "string",
                          "example": "System"
                        },
                        "accent_color": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "show_wallet_login_first": {
                          "type": "boolean",
                          "example": false
                        },
                        "allowed_domains": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "allowed_native_app_ids": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "allowed_native_app_url_schemes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "wallet_auth": {
                          "type": "boolean",
                          "example": true
                        },
                        "email_auth": {
                          "type": "boolean",
                          "example": true
                        },
                        "sms_auth": {
                          "type": "boolean",
                          "example": false
                        },
                        "guest_auth": {
                          "type": "boolean",
                          "example": false
                        },
                        "solana_wallet_auth": {
                          "type": "boolean",
                          "example": false
                        },
                        "telegram_auth": {
                          "type": "boolean",
                          "example": false
                        },
                        "disable_plus_emails": {
                          "type": "boolean",
                          "example": false
                        },
                        "google_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "twitter_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "discord_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "github_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "tiktok_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "line_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "linkedin_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "apple_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "spotify_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "instagram_oauth": {
                          "type": "boolean",
                          "example": false
                        },
                        "farcaster_auth": {
                          "type": "boolean",
                          "example": false
                        },
                        "passkey_auth": {
                          "type": "boolean",
                          "example": false
                        },
                        "passkeys_for_signup_enabled": {
                          "type": "boolean",
                          "example": false
                        },
                        "custom_jwt_auth": {
                          "type": "boolean",
                          "example": false
                        },
                        "allowlist_enabled": {
                          "type": "boolean",
                          "example": false
                        },
                        "allowlist_config": {
                          "type": "object",
                          "properties": {
                            "error_title": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "error_detail": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "cta_text": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            },
                            "cta_link": {
                              "type": "string",
                              "nullable": true,
                              "example": null
                            }
                          }
                        },
                        "wallet_connect_cloud_project_id": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "custom_api_url": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "embedded_wallet_config": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            },
                            "ethereum": {
                              "type": "object",
                              "properties": {
                                "create_on_login": {
                                  "type": "string",
                                  "example": "off"
                                }
                              }
                            },
                            "solana": {
                              "type": "object",
                              "properties": {
                                "create_on_login": {
                                  "type": "string",
                                  "example": "off"
                                }
                              }
                            },
                            "user_owned_recovery_options": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["user-passcode"]
                            },
                            "require_user_password_on_create": {
                              "type": "boolean",
                              "example": false
                            },
                            "require_user_owned_recovery_on_create": {
                              "type": "boolean",
                              "example": false
                            },
                            "mode": {
                              "type": "string",
                              "example": "user-controlled-server-wallets-only"
                            }
                          }
                        },
                        "enforce_wallet_uis": {
                          "type": "boolean",
                          "example": true
                        },
                        "legacy_wallet_ui_config": {
                          "type": "boolean",
                          "example": false
                        },
                        "fiat_on_ramp_enabled": {
                          "type": "boolean",
                          "example": false
                        },
                        "captcha_enabled": {
                          "type": "boolean",
                          "example": false
                        },
                        "twitter_oauth_on_mobile_enabled": {
                          "type": "boolean",
                          "example": true
                        },
                        "mfa_methods": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "example": []
                        },
                        "captcha_site_key": {
                          "type": "string",
                          "example": "t:0x4AAAAAAAM8ceq5KhP1uJBt"
                        },
                        "verification_key": {
                          "type": "string",
                          "example": "-----BEGIN PUBLIC KEY-----MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9OHr4bSwsbVjJXURir4kSU1tDSFGkW5LEgwUM6gcE6y1K5+yeCdzxlitEU5RaIs075VhYDsAz9kbTdw8ROj+qQ==-----END PUBLIC KEY-----"
                        },
                        "max_linked_wallets_per_user": {
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        },
                        "farcaster_link_wallets_enabled": {
                          "type": "boolean",
                          "example": false
                        },
                        "whatsapp_enabled": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "secret": {
                      "type": "string",
                      "description": "App secret key for API authentication",
                      "example": "4qsyqhhZVmpA3HTCoHMuBx9MpcEyZHApiAihCipZ6VFep61typyiStKC6MbAPSVoh9bJh2CPsGQybGmMGGRFdzgH"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid app name"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Account not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Too many app creation requests. Please try again later."
                    },
                    "retry_after": {
                      "type": "integer",
                      "description": "Number of seconds to wait before retrying",
                      "example": 60
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/apps/{appId}": {
      "get": {
        "summary": "Get app details",
        "description": "Retrieves comprehensive details about a specific app",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "responses": {
          "200": {
            "description": "App details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "cmdie6l1300x2l70jd4hu8f3o"
                    },
                    "name": {
                      "type": "string",
                      "example": "New App"
                    },
                    "logo_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "icon_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "terms_and_conditions_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "privacy_policy_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "require_users_accept_terms": {
                      "type": "boolean",
                      "nullable": true,
                      "example": null
                    },
                    "theme": {
                      "type": "string",
                      "example": "System"
                    },
                    "accent_color": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "show_wallet_login_first": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowed_domains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "allowed_native_app_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "allowed_native_app_url_schemes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "wallet_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "email_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "sms_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "guest_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "solana_wallet_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "telegram_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "disable_plus_emails": {
                      "type": "boolean",
                      "example": false
                    },
                    "google_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "twitter_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "discord_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "github_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "tiktok_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "line_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "linkedin_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "apple_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "spotify_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "instagram_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "farcaster_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "passkey_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "passkeys_for_signup_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "custom_jwt_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowlist_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "denylist_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "allowlist_config": {
                      "type": "object",
                      "properties": {
                        "error_title": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "error_detail": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_text": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_link": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    "wallet_connect_cloud_project_id": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "custom_api_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "embedded_wallet_config": {
                      "type": "object",
                      "properties": {
                        "create_on_login": {
                          "type": "string",
                          "example": "off"
                        },
                        "ethereum": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            }
                          }
                        },
                        "solana": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            }
                          }
                        },
                        "user_owned_recovery_options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["user-passcode"]
                        },
                        "require_user_password_on_create": {
                          "type": "boolean",
                          "example": false
                        },
                        "require_user_owned_recovery_on_create": {
                          "type": "boolean",
                          "example": false
                        },
                        "mode": {
                          "type": "string",
                          "example": "user-controlled-server-wallets-only"
                        }
                      }
                    },
                    "enforce_wallet_uis": {
                      "type": "boolean",
                      "example": true
                    },
                    "legacy_wallet_ui_config": {
                      "type": "boolean",
                      "example": false
                    },
                    "fiat_on_ramp_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "captcha_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "twitter_oauth_on_mobile_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "mfa_methods": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": []
                    },
                    "captcha_site_key": {
                      "type": "string",
                      "example": "t:0x4AAAAAAAM8ceq5KhP1uJBt"
                    },
                    "verification_key": {
                      "type": "string",
                      "example": "-----BEGIN PUBLIC KEY-----MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEVXWbV7omwNp/wo9m8ZoCe494Th2dg38DOoujFf7FqX7SbRg2NZz3HncEG1K58znFnqexsRQDMRnvotXRPggJog==-----END PUBLIC KEY-----"
                    },
                    "funding_config": {
                      "type": "object",
                      "properties": {
                        "default_recommended_currency": {
                          "type": "object",
                          "properties": {
                            "chain": {
                              "type": "string",
                              "example": "eip155:1"
                            },
                            "asset": {
                              "type": "string",
                              "example": "native-currency"
                            }
                          }
                        },
                        "default_recommended_amount": {
                          "type": "string",
                          "example": "0.0001"
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["coinbase-onramp"]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "method": {
                                "type": "string",
                                "example": "exchange"
                              },
                              "provider": {
                                "type": "string",
                                "example": "coinbase"
                              }
                            }
                          }
                        },
                        "prompt_funding_on_wallet_creation": {
                          "type": "boolean",
                          "example": false
                        },
                        "cross_chain_bridging_enabled": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "max_linked_wallets_per_user": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "farcaster_link_wallets_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "whatsapp_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "created_at": {
                      "type": "integer",
                      "example": 1753421993
                    },
                    "updated_at": {
                      "type": "integer",
                      "example": 1753421993
                    },
                    "env": {
                      "type": "string",
                      "example": "dev"
                    },
                    "usersCount": {
                      "type": "integer",
                      "example": -1
                    },
                    "development_apps": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": []
                    },
                    "production_app": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "cookie_auth_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "cookie_domain": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "cookie_same_site_lax": {
                      "type": "boolean",
                      "example": false
                    },
                    "has_updated_login_methods": {
                      "type": "boolean",
                      "example": false
                    },
                    "login_methods_requested": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "allowed_android_signing_key_hashes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "return_identity_tokens": {
                      "type": "boolean",
                      "example": false
                    },
                    "session_timeout_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "session_inactivity_window_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "access_token_lifetime_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "id_token_lifetime_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "account_transfer_enabled": {
                      "type": "boolean",
                      "nullable": true,
                      "example": null
                    },
                    "allowed_oauth_redirect_urls": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "delegated_actions_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "transaction_scanning_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "native_onramp_provider_configs": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Could not find app fasdfasdfasdfsf."
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update app configuration - Used across multiple screens: app/configuration/settings (general, domains, client, advanced), app/configuration/branding, app/configuration/terms&privacy, app/authentication (basics)",
        "description": "Comprehensive app configuration endpoint used across multiple dashboard screens. Updates branding (name, logo, theme, accent color), privacy settings (terms & conditions URL, privacy policy URL, terms acceptance), authentication methods (wallet, email, SMS, passkey, etc.), domain restrictions, client settings, and advanced features (Android signing keys, captcha, allowlist, OAuth redirect URLs, embedded wallet config, funding config). Related to app/configuration/settings (general, domains, client, advanced), app/configuration/branding, app/configuration/terms&privacy, app/authentication (basics)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowed_android_signing_key_hashes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Allowed Android signing key hashes for the app (Used in: app/configuration/settings/advanced)",
                    "example": []
                  },
                  "terms_and_conditions_url": {
                    "type": "string",
                    "description": "URL for terms and conditions (Used in: app/configuration/terms&privacy)",
                    "example": "https://hashira.io/terms-and-conditions"
                  },
                  "privacy_policy_url": {
                    "type": "string",
                    "description": "URL for privacy policy (Used in: app/configuration/terms&privacy)",
                    "example": "https://hashira.io/privacy-policy"
                  },
                  "require_users_accept_terms": {
                    "type": "boolean",
                    "description": "Whether users are required to accept terms and conditions (Used in: app/configuration/terms&privacy)",
                    "example": true
                  },
                  "name": {
                    "type": "string",
                    "description": "App name (Used in: app/configuration/branding, app/configuration/settings/general)",
                    "example": "CatalogFi"
                  },
                  "logo_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "App logo URL (Used in: app/configuration/branding)",
                    "example": null
                  },
                  "icon_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "App icon URL (Used in: app/configuration/branding)",
                    "example": null
                  },
                  "theme": {
                    "type": "string",
                    "description": "App theme (Used in: app/configuration/branding)",
                    "example": "System"
                  },
                  "accent_color": {
                    "type": "string",
                    "description": "App accent color (Used in: app/configuration/branding)",
                    "example": "#5CFFD5"
                  },
                  "show_wallet_login_first": {
                    "type": "boolean",
                    "description": "Whether to show wallet login first (Used in: app/configuration/settings/general)",
                    "example": true
                  },
                  "allowed_domains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of allowed domains for the app (Used in: app/configuration/settings/domains)",
                    "example": ["https://catalog.fi", "https://hashira.io"]
                  },
                  "allowed_oauth_redirect_urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Allowed OAuth redirect URLs for the app (Used in: app/configuration/settings/advanced)",
                    "example": ["https://hashira.io/redirect"]
                  },
                  "wallet_auth": {
                    "type": "boolean",
                    "description": "Whether wallet authentication is enabled (Used in: app/configuration/settings/general)",
                    "example": true
                  },
                  "email_auth": {
                    "type": "boolean",
                    "description": "Whether email authentication is enabled (Used in: app/configuration/settings/general)",
                    "example": true
                  },
                  "sms_auth": {
                    "type": "boolean",
                    "description": "Whether SMS authentication is enabled (Used in: app/configuration/settings/general)",
                    "example": false
                  },
                  "guest_auth": {
                    "type": "boolean",
                    "description": "Whether guest authentication is enabled (Used in: app/configuration/settings/general)",
                    "example": false
                  },
                  "solana_wallet_auth": {
                    "type": "boolean",
                    "description": "Whether Solana wallet authentication is enabled (Used in: app/configuration/settings/general)",
                    "example": true
                  },
                  "telegram_auth": {
                    "type": "boolean",
                    "description": "Whether Telegram authentication is enabled (Used in: app/configuration/settings/general)",
                    "example": false
                  },
                  "passkey_auth": {
                    "type": "boolean",
                    "description": "Whether passkey authentication is enabled (Used in: app/configuration/settings/general)",
                    "example": true
                  },
                  "allowlist_enabled": {
                    "type": "boolean",
                    "description": "Whether allowlist is enabled (Used in: app/configuration/settings/advanced)",
                    "example": true
                  },
                  "captcha_enabled": {
                    "type": "boolean",
                    "description": "Whether captcha is enabled (Used in: app/configuration/settings/advanced)",
                    "example": false
                  },
                  "max_linked_wallets_per_user": {
                    "type": "integer",
                    "description": "Maximum number of linked wallets per user (Used in: app/configuration/settings/advanced)",
                    "example": 20
                  },
                  "farcaster_link_wallets_enabled": {
                    "type": "boolean",
                    "description": "Whether Farcaster link wallets is enabled (Used in: app/configuration/settings/advanced)",
                    "example": false
                  },
                  "whatsapp_enabled": {
                    "type": "boolean",
                    "description": "Whether WhatsApp integration is enabled (Used in: app/configuration/settings/advanced)",
                    "example": false
                  },
                  "allowlist_config": {
                    "type": "object",
                    "properties": {
                      "error_title": {
                        "type": "string",
                        "nullable": true,
                        "description": "Error title for allowlist (Used in: app/configuration/settings/advanced)",
                        "example": null
                      },
                      "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Error detail for allowlist (Used in: app/configuration/settings/advanced)",
                        "example": null
                      },
                      "cta_text": {
                        "type": "string",
                        "nullable": true,
                        "description": "Call to action text for allowlist (Used in: app/configuration/settings/advanced)",
                        "example": null
                      },
                      "cta_link": {
                        "type": "string",
                        "nullable": true,
                        "description": "Call to action link for allowlist (Used in: app/configuration/settings/advanced)",
                        "example": null
                      }
                    }
                  },
                  "embedded_wallet_config": {
                    "type": "object",
                    "properties": {
                      "create_on_login": {
                        "type": "string",
                        "description": "When to create embedded wallets (Used in: app/configuration/settings/advanced)",
                        "example": "users-without-wallets"
                      },
                      "ethereum": {
                        "type": "object",
                        "properties": {
                          "create_on_login": {
                            "type": "string",
                            "description": "When to create Ethereum wallets (Used in: app/configuration/settings/advanced)",
                            "example": "users-without-wallets"
                          }
                        }
                      },
                      "solana": {
                        "type": "object",
                        "properties": {
                          "create_on_login": {
                            "type": "string",
                            "description": "When to create Solana wallets (Used in: app/configuration/settings/advanced)",
                            "example": "off"
                          }
                        }
                      },
                      "user_owned_recovery_options": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "User owned recovery options (Used in: app/configuration/settings/advanced)",
                        "example": ["user-passcode"]
                      },
                      "require_user_password_on_create": {
                        "type": "boolean",
                        "description": "Whether to require user password on wallet creation (Used in: app/configuration/settings/advanced)",
                        "example": false
                      },
                      "require_user_owned_recovery_on_create": {
                        "type": "boolean",
                        "description": "Whether to require user owned recovery on wallet creation (Used in: app/configuration/settings/advanced)",
                        "example": false
                      },
                      "mode": {
                        "type": "string",
                        "description": "Embedded wallet mode (Used in: app/configuration/settings/advanced)",
                        "example": "user-controlled-server-wallets-only"
                      }
                    }
                  },
                  "funding_config": {
                    "type": "object",
                    "properties": {
                      "default_recommended_currency": {
                        "type": "object",
                        "properties": {
                          "chain": {
                            "type": "string",
                            "description": "Default chain for funding (Used in: app/configuration/settings/advanced)",
                            "example": "eip155:1"
                          },
                          "asset": {
                            "type": "string",
                            "description": "Default asset for funding (Used in: app/configuration/settings/advanced)",
                            "example": "native-currency"
                          }
                        }
                      },
                      "default_recommended_amount": {
                        "type": "string",
                        "description": "Default recommended funding amount (Used in: app/configuration/settings/advanced)",
                        "example": "0.0001"
                      },
                      "methods": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Available funding methods (Used in: app/configuration/settings/advanced)",
                        "example": ["coinbase-onramp"]
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "method": {
                              "type": "string",
                              "description": "Funding method (Used in: app/configuration/settings/advanced)",
                              "example": "exchange"
                            },
                            "provider": {
                              "type": "string",
                              "description": "Funding provider (Used in: app/configuration/settings/advanced)",
                              "example": "coinbase"
                            }
                          }
                        }
                      },
                      "prompt_funding_on_wallet_creation": {
                        "type": "boolean",
                        "description": "Whether to prompt funding on wallet creation (Used in: app/configuration/settings/advanced)",
                        "example": false
                      },
                      "cross_chain_bridging_enabled": {
                        "type": "boolean",
                        "description": "Whether cross-chain bridging is enabled (Used in: app/configuration/settings/advanced)",
                        "example": false
                      }
                    }
                  },
                  "wallet_connect_cloud_project_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "WalletConnect Cloud project ID for the app (Used in: app/configuration/integrations)",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "App configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "cmcx1p0y50315i80ldhmlcnmm"
                    },
                    "name": {
                      "type": "string",
                      "example": "Garden"
                    },
                    "logo_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "icon_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "terms_and_conditions_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "privacy_policy_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "require_users_accept_terms": {
                      "type": "boolean",
                      "nullable": true,
                      "example": null
                    },
                    "theme": {
                      "type": "string",
                      "example": "System"
                    },
                    "accent_color": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "show_wallet_login_first": {
                      "type": "boolean",
                      "example": true
                    },
                    "allowed_domains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["https://catalog.fi", "https://hashira.io"]
                    },
                    "allowed_native_app_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "allowed_native_app_url_schemes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "wallet_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "email_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "sms_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "guest_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "solana_wallet_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "telegram_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "disable_plus_emails": {
                      "type": "boolean",
                      "example": false
                    },
                    "google_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "twitter_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "discord_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "github_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "tiktok_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "line_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "linkedin_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "apple_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "spotify_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "instagram_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "farcaster_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "passkey_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "passkeys_for_signup_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "custom_jwt_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowlist_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "allowlist_config": {
                      "type": "object",
                      "properties": {
                        "error_title": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "error_detail": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_text": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_link": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    "wallet_connect_cloud_project_id": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "custom_api_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "embedded_wallet_config": {
                      "type": "object",
                      "properties": {
                        "create_on_login": {
                          "type": "string",
                          "example": "users-without-wallets"
                        },
                        "ethereum": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "users-without-wallets"
                            }
                          }
                        },
                        "solana": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            }
                          }
                        },
                        "user_owned_recovery_options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["user-passcode"]
                        },
                        "require_user_password_on_create": {
                          "type": "boolean",
                          "example": false
                        },
                        "require_user_owned_recovery_on_create": {
                          "type": "boolean",
                          "example": false
                        },
                        "mode": {
                          "type": "string",
                          "example": "user-controlled-server-wallets-only"
                        }
                      }
                    },
                    "enforce_wallet_uis": {
                      "type": "boolean",
                      "example": true
                    },
                    "legacy_wallet_ui_config": {
                      "type": "boolean",
                      "example": false
                    },
                    "fiat_on_ramp_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "captcha_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "twitter_oauth_on_mobile_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "mfa_methods": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": []
                    },
                    "captcha_site_key": {
                      "type": "string",
                      "example": "t:0x4AAAAAAAM8ceq5KhP1uJBt"
                    },
                    "verification_key": {
                      "type": "string",
                      "example": "-----BEGIN PUBLIC KEY-----MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEVXWbV7omwNp/wo9m8ZoCe494Th2dg38DOoujFf7FqX7SbRg2NZz3HncEG1K58znFnqexsRQDMRnvotXRPggJog==-----END PUBLIC KEY-----"
                    },
                    "funding_config": {
                      "type": "object",
                      "properties": {
                        "default_recommended_currency": {
                          "type": "object",
                          "properties": {
                            "chain": {
                              "type": "string",
                              "example": "eip155:1"
                            },
                            "asset": {
                              "type": "string",
                              "example": "native-currency"
                            }
                          }
                        },
                        "default_recommended_amount": {
                          "type": "string",
                          "example": "0.0001"
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["coinbase-onramp"]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "method": {
                                "type": "string",
                                "example": "exchange"
                              },
                              "provider": {
                                "type": "string",
                                "example": "coinbase"
                              }
                            }
                          }
                        },
                        "prompt_funding_on_wallet_creation": {
                          "type": "boolean",
                          "example": false
                        },
                        "cross_chain_bridging_enabled": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "max_linked_wallets_per_user": {
                      "type": "integer",
                      "example": 20
                    },
                    "farcaster_link_wallets_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "whatsapp_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowed_android_signing_key_hashes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid Android configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalogfi.com"
          }
        ]
      }
    },
    "/v1/apps/{appId}/clients": {
      "get": {
        "summary": "Get app clients - Related to app/configuration/settings (client)",
        "description": "Retrieves all app clients for a specific app. Related to app/configuration/settings (client)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "responses": {
          "200": {
            "description": "App clients retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Client ID",
                        "example": "bllvm627xn0mjbcd3wbv5olpc"
                      },
                      "app_id": {
                        "type": "string",
                        "description": "App ID",
                        "example": "cmcx1p0y50315i80ldhmlcnmm"
                      },
                      "short_id": {
                        "type": "string",
                        "description": "Short client ID",
                        "example": "wbv5olpc"
                      },
                      "name": {
                        "type": "string",
                        "description": "Client name",
                        "example": "Default web app client"
                      },
                      "client_type": {
                        "type": "string",
                        "description": "Type of client (web, mobile)",
                        "example": "web"
                      },
                      "allowed_native_app_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed native app IDs",
                        "example": []
                      },
                      "allowed_native_app_url_schemes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed native app URL schemes",
                        "example": []
                      },
                      "allowed_domains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed domains for the client",
                        "example": []
                      },
                      "cookie_auth_enabled": {
                        "type": "boolean",
                        "description": "Whether cookie authentication is enabled",
                        "example": false
                      },
                      "cookie_auth_toggled_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When cookie auth was toggled",
                        "example": null
                      },
                      "cookie_domain": {
                        "type": "string",
                        "nullable": true,
                        "description": "Cookie domain",
                        "example": null
                      },
                      "cookie_domain_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When cookie domain was verified",
                        "example": null
                      },
                      "use_app_cookie_domain_settings": {
                        "type": "boolean",
                        "description": "Whether to use app cookie domain settings",
                        "example": false
                      },
                      "session_timeout_minutes": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Session timeout in minutes",
                        "example": null
                      },
                      "session_inactivity_window_minutes": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Session inactivity window in minutes",
                        "example": null
                      },
                      "access_token_lifetime_minutes": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Access token lifetime in minutes",
                        "example": null
                      },
                      "id_token_lifetime_minutes": {
                        "type": "integer",
                        "nullable": true,
                        "description": "ID token lifetime in minutes",
                        "example": null
                      },
                      "apple_oauth_client_id_override": {
                        "type": "string",
                        "nullable": true,
                        "description": "Apple OAuth client ID override",
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      },
      "post": {
        "summary": "Create app client - Related to app/configuration/settings (client)",
        "description": "Creates a new app client for a specific app. Related to app/configuration/settings (client)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the client",
                    "example": "New dummy mobile client"
                  },
                  "client_type": {
                    "type": "string",
                    "description": "Type of client (web, mobile)",
                    "example": "mobile"
                  }
                },
                "required": ["name", "client_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "App client created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Client ID",
                      "example": "dddtd8jm2kfzpx98g99ikfx2p"
                    },
                    "app_id": {
                      "type": "string",
                      "description": "App ID",
                      "example": "cmcx1p0y50315i80ldhmlcnmm"
                    },
                    "short_id": {
                      "type": "string",
                      "description": "Short client ID",
                      "example": "99ikfx2p"
                    },
                    "name": {
                      "type": "string",
                      "description": "Client name",
                      "example": "New dummy mobile client"
                    },
                    "client_type": {
                      "type": "string",
                      "description": "Type of client (web, mobile)",
                      "example": "mobile"
                    },
                    "allowed_native_app_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed native app IDs",
                      "example": []
                    },
                    "allowed_native_app_url_schemes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed native app URL schemes",
                      "example": []
                    },
                    "allowed_domains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed domains for the client",
                      "example": []
                    },
                    "cookie_auth_enabled": {
                      "type": "boolean",
                      "description": "Whether cookie authentication is enabled",
                      "example": false
                    },
                    "cookie_auth_toggled_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "When cookie auth was toggled",
                      "example": null
                    },
                    "cookie_domain": {
                      "type": "string",
                      "nullable": true,
                      "description": "Cookie domain",
                      "example": null
                    },
                    "cookie_domain_verified_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "When cookie domain was verified",
                      "example": null
                    },
                    "use_app_cookie_domain_settings": {
                      "type": "boolean",
                      "description": "Whether to use app cookie domain settings",
                      "example": false
                    },
                    "session_timeout_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Session timeout in minutes",
                      "example": null
                    },
                    "session_inactivity_window_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Session inactivity window in minutes",
                      "example": null
                    },
                    "access_token_lifetime_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Access token lifetime in minutes",
                      "example": null
                    },
                    "id_token_lifetime_minutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "ID token lifetime in minutes",
                      "example": null
                    },
                    "apple_oauth_client_id_override": {
                      "type": "string",
                      "nullable": true,
                      "description": "Apple OAuth client ID override",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid client configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/apps/{appId}/clients/{clientId}": {
      "patch": {
        "summary": "Update app client - Related to app/configuration/settings (client)",
        "description": "Updates a specific app client configuration. Related to app/configuration/settings (client)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Client ID",
            "example": "v6u2vb7fya7hj9g91501xkv8r"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the client",
                    "example": "Default mobile app client"
                  },
                  "client_type": {
                    "type": "string",
                    "description": "Type of client (web, mobile)",
                    "example": "mobile"
                  },
                  "allowed_domains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Allowed domains for the client",
                    "example": []
                  },
                  "use_app_cookie_domain_settings": {
                    "type": "boolean",
                    "description": "Whether to use app cookie domain settings",
                    "example": false
                  },
                  "allowed_native_app_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Allowed native app IDs",
                    "example": []
                  },
                  "allowed_native_app_url_schemes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Allowed native app URL schemes",
                    "example": []
                  },
                  "session_timeout_minutes": {
                    "type": "integer",
                    "description": "Session timeout in minutes",
                    "example": 144000
                  },
                  "session_inactivity_window_minutes": {
                    "type": "integer",
                    "description": "Session inactivity window in minutes",
                    "example": 576000
                  },
                  "access_token_lifetime_minutes": {
                    "type": "integer",
                    "description": "Access token lifetime in minutes",
                    "example": 60
                  },
                  "id_token_lifetime_minutes": {
                    "type": "integer",
                    "description": "ID token lifetime in minutes",
                    "example": 600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "App client updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Client ID",
                      "example": "v6u2vb7fya7hj9g91501xkv8r"
                    },
                    "app_id": {
                      "type": "string",
                      "description": "App ID",
                      "example": "cmcx1p0y50315i80ldhmlcnmm"
                    },
                    "short_id": {
                      "type": "string",
                      "description": "Short client ID",
                      "example": "501xkv8r"
                    },
                    "name": {
                      "type": "string",
                      "description": "Client name",
                      "example": "Default mobile app client"
                    },
                    "client_type": {
                      "type": "string",
                      "description": "Type of client (web, mobile)",
                      "example": "mobile"
                    },
                    "allowed_native_app_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed native app IDs",
                      "example": []
                    },
                    "allowed_native_app_url_schemes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed native app URL schemes",
                      "example": []
                    },
                    "allowed_domains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed domains for the client",
                      "example": []
                    },
                    "cookie_auth_enabled": {
                      "type": "boolean",
                      "description": "Whether cookie authentication is enabled",
                      "example": false
                    },
                    "cookie_auth_toggled_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "When cookie auth was toggled",
                      "example": null
                    },
                    "cookie_domain": {
                      "type": "string",
                      "nullable": true,
                      "description": "Cookie domain",
                      "example": null
                    },
                    "cookie_domain_verified_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "When cookie domain was verified",
                      "example": null
                    },
                    "use_app_cookie_domain_settings": {
                      "type": "boolean",
                      "description": "Whether to use app cookie domain settings",
                      "example": false
                    },
                    "session_timeout_minutes": {
                      "type": "integer",
                      "description": "Session timeout in minutes",
                      "example": 144000
                    },
                    "session_inactivity_window_minutes": {
                      "type": "integer",
                      "description": "Session inactivity window in minutes",
                      "example": 576000
                    },
                    "access_token_lifetime_minutes": {
                      "type": "integer",
                      "description": "Access token lifetime in minutes",
                      "example": 60
                    },
                    "id_token_lifetime_minutes": {
                      "type": "integer",
                      "description": "ID token lifetime in minutes",
                      "example": 600
                    },
                    "apple_oauth_client_id_override": {
                      "type": "string",
                      "nullable": true,
                      "description": "Apple OAuth client ID override",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid client configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App or client not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App or client not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/apps/{appId}/url-restriction": {
      "put": {
        "summary": "Update app URL restrictions - Related to app/configuration/settings/advanced (allowed oauth redirect url)",
        "description": "Updates URL restriction settings including OAuth redirect URLs. Related to app/configuration/settings/advanced (allowed oauth redirect url)",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowed_oauth_redirect_urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Allowed OAuth redirect URLs for the app",
                    "example": ["https://hashira.io/redirect"]
                  }
                },
                "required": ["allowed_oauth_redirect_urls"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL restrictions updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowed_oauth_redirect_urls": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Allowed OAuth redirect URLs for the app",
                      "example": ["https://hashira.io/redirect"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid URL restrictions"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalogfi.com"
          }
        ]
      }
    },
    "/v1/apps/{appId}/wallets": {
      "post": {
        "summary": "Create wallet",
        "description": "Creates a new wallet for the specified app. Supports both Ethereum and Solana chains with optional policy, owner, and additional signers configuration.",
        "tags": ["Wallets"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chain_type": {
                    "type": "string",
                    "enum": ["ethereum", "solana"],
                    "description": "Type of blockchain for the wallet",
                    "example": "ethereum"
                  },
                  "policy_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of policy IDs to apply to the wallet",
                    "example": []
                  },
                  "owner_id": {
                    "type": "string",
                    "description": "ID of the wallet owner (optional)",
                    "example": "dkqvwagss04y7sez0pa8yb74"
                  },
                  "additional_signers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "signer_id": {
                          "type": "string",
                          "description": "ID of the additional signer",
                          "example": "ohics7aordqs363e8b91g0lv"
                        }
                      },
                      "required": ["signer_id"]
                    },
                    "description": "Array of additional signers for the wallet (optional)"
                  }
                },
                "required": ["chain_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique wallet identifier",
                      "example": "d0l66us361cm2p5777kpihjx"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of wallet",
                      "example": "server"
                    },
                    "address": {
                      "type": "string",
                      "description": "Wallet address on the blockchain",
                      "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                    },
                    "chain_type": {
                      "type": "string",
                      "enum": ["ethereum", "solana"],
                      "description": "Type of blockchain for the wallet",
                      "example": "ethereum"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when the wallet was created",
                      "example": 1753766031400
                    },
                    "delegated": {
                      "type": "boolean",
                      "description": "Whether the wallet is delegated",
                      "example": false
                    },
                    "auth_key": {
                      "type": "object",
                      "nullable": true,
                      "description": "Authentication key information",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Auth key ID",
                          "example": "dkqvwagss04y7sez0pa8yb74"
                        },
                        "display_name": {
                          "type": "string",
                          "description": "Display name for the auth key",
                          "example": "Hashira"
                        },
                        "authorization_threshold": {
                          "type": "integer",
                          "description": "Number of signatures required for authorization",
                          "example": 1
                        },
                        "authorization_keys": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "public_key": {
                                "type": "string",
                                "description": "Public key in PEM format",
                                "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE62ypnPSHuR4NoOKRC0UU7zYZCKK2\nrTUtDeoNihExOdShmbO1elmvMoknM/HyIOqjIrm0hQZT3/9kUtof/VnDgg==\n-----END PUBLIC KEY-----"
                              },
                              "display_name": {
                                "type": "string",
                                "nullable": true,
                                "description": "Display name for the authorization key"
                              }
                            }
                          }
                        },
                        "user_session_keys": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "description": "User session keys"
                        }
                      }
                    },
                    "policy": {
                      "type": "object",
                      "nullable": true,
                      "description": "Policy information applied to the wallet",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Policy ID",
                          "example": "sb02ad6ed2kah6l32gz1n40e"
                        },
                        "name": {
                          "type": "string",
                          "description": "Policy name",
                          "example": "Test Policy"
                        }
                      }
                    },
                    "signers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Signer ID",
                            "example": "z73zi5i1m4fp57qfy6oc28cn"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Display name for the signer",
                            "example": "Test key"
                          },
                          "key_quorum_id": {
                            "type": "string",
                            "description": "Key quorum ID",
                            "example": "ohics7aordqs363e8b91g0lv"
                          }
                        }
                      },
                      "description": "Array of signers associated with the wallet"
                    },
                    "user_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "User ID associated with the wallet"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tags associated with the wallet"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid wallet configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    },
                    "code": {
                      "type": "string",
                      "example": "missing_or_invalid_catalog_app_id"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Too many wallet creation requests. Please try again later."
                    },
                    "retry_after": {
                      "type": "integer",
                      "description": "Number of seconds to wait before retrying",
                      "example": 60
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.catalog.fi"
          }
        ]
      }
    },
    "/v1/wallets/{walletId}": {
      "get": {
        "summary": "Get wallet",
        "description": "Retrieves details of a specific wallet by ID",
        "tags": ["Wallets"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Wallet ID",
            "example": "d0l66us361cm2p5777kpihjx"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique wallet identifier",
                      "example": "d0l66us361cm2p5777kpihjx"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of wallet",
                      "example": "server"
                    },
                    "address": {
                      "type": "string",
                      "description": "Wallet address on the blockchain",
                      "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                    },
                    "chain_type": {
                      "type": "string",
                      "enum": ["ethereum", "solana"],
                      "description": "Type of blockchain for the wallet",
                      "example": "ethereum"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when the wallet was created",
                      "example": 1753766031400
                    },
                    "delegated": {
                      "type": "boolean",
                      "description": "Whether the wallet is delegated",
                      "example": false
                    },
                    "auth_key": {
                      "type": "object",
                      "nullable": true,
                      "description": "Authentication key information"
                    },
                    "policy": {
                      "type": "object",
                      "nullable": true,
                      "description": "Policy information applied to the wallet"
                    },
                    "signers": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "Array of signers associated with the wallet"
                    },
                    "user_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "User ID associated with the wallet"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tags associated with the wallet"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Wallet not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "patch": {
        "summary": "Update wallet",
        "description": "Updates a specific wallet's configuration and properties",
        "tags": ["Wallets"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Wallet ID",
            "example": "d0l66us361cm2p5777kpihjx"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags to associate with the wallet",
                    "example": ["production", "user-wallet"]
                  },
                  "policy_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Policy IDs to apply to the wallet",
                    "example": ["sb02ad6ed2kah6l32gz1n40e"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique wallet identifier",
                      "example": "d0l66us361cm2p5777kpihjx"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of wallet",
                      "example": "server"
                    },
                    "address": {
                      "type": "string",
                      "description": "Wallet address on the blockchain",
                      "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                    },
                    "chain_type": {
                      "type": "string",
                      "enum": ["ethereum", "solana"],
                      "description": "Type of blockchain for the wallet",
                      "example": "ethereum"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when the wallet was created",
                      "example": 1753766031400
                    },
                    "delegated": {
                      "type": "boolean",
                      "description": "Whether the wallet is delegated",
                      "example": false
                    },
                    "auth_key": {
                      "type": "object",
                      "nullable": true,
                      "description": "Authentication key information"
                    },
                    "policy": {
                      "type": "object",
                      "nullable": true,
                      "description": "Policy information applied to the wallet"
                    },
                    "signers": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "Array of signers associated with the wallet"
                    },
                    "user_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "User ID associated with the wallet"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tags associated with the wallet"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid wallet configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Wallet not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/wallets": {
      "get": {
        "summary": "Get wallets",
        "description": "Retrieves a list of wallets for the app with optional filtering",
        "tags": ["Wallets"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "chain_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["ethereum", "solana"]
            },
            "description": "Filter wallets by chain type",
            "example": "ethereum"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter wallets by user ID",
            "example": "dkqvwagss04y7sez0pa8yb74"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            },
            "description": "Maximum number of wallets to return",
            "example": 50
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of wallets to skip",
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Wallets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wallets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique wallet identifier",
                            "example": "d0l66us361cm2p5777kpihjx"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of wallet",
                            "example": "server"
                          },
                          "address": {
                            "type": "string",
                            "description": "Wallet address on the blockchain",
                            "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                          },
                          "chain_type": {
                            "type": "string",
                            "enum": ["ethereum", "solana"],
                            "description": "Type of blockchain for the wallet",
                            "example": "ethereum"
                          },
                          "created_at": {
                            "type": "integer",
                            "description": "Timestamp when the wallet was created",
                            "example": 1753766031400
                          },
                          "delegated": {
                            "type": "boolean",
                            "description": "Whether the wallet is delegated",
                            "example": false
                          },
                          "auth_key": {
                            "type": "object",
                            "nullable": true,
                            "description": "Authentication key information"
                          },
                          "policy": {
                            "type": "object",
                            "nullable": true,
                            "description": "Policy information applied to the wallet"
                          },
                          "signers": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "description": "Array of signers associated with the wallet"
                          },
                          "user_id": {
                            "type": "string",
                            "nullable": true,
                            "description": "User ID associated with the wallet"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Tags associated with the wallet"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of wallets",
                      "example": 150
                    },
                    "has_more": {
                      "type": "boolean",
                      "description": "Whether there are more wallets to fetch",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/wallets/{walletId}/export": {
      "post": {
        "summary": "Export wallet",
        "description": "Exports a wallet's private key and configuration for backup or migration purposes",
        "tags": ["Wallets"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Wallet ID",
            "example": "d0l66us361cm2p5777kpihjx"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "Password to encrypt the exported wallet data",
                    "example": "secure-password-123"
                  },
                  "format": {
                    "type": "string",
                    "enum": ["json", "keystore"],
                    "description": "Export format",
                    "example": "json"
                  }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet exported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wallet_data": {
                      "type": "string",
                      "description": "Encrypted wallet data",
                      "example": "encrypted-wallet-data-here"
                    },
                    "format": {
                      "type": "string",
                      "description": "Export format used",
                      "example": "json"
                    },
                    "exported_at": {
                      "type": "integer",
                      "description": "Timestamp when the wallet was exported",
                      "example": 1753766031400
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid export parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Wallet not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/wallets/{walletId}/balance": {
      "get": {
        "summary": "Get wallet balance",
        "description": "Retrieves the current balance of a specific wallet",
        "tags": ["Wallets"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Wallet ID",
            "example": "d0l66us361cm2p5777kpihjx"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "caip2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Chain identifier in CAIP-2 format",
            "example": "eip155:1"
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet balance retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "string",
                      "description": "Wallet balance in wei/smallest unit",
                      "example": "1000000000000000000"
                    },
                    "formatted_balance": {
                      "type": "string",
                      "description": "Human-readable balance",
                      "example": "1.0"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency symbol",
                      "example": "ETH"
                    },
                    "caip2": {
                      "type": "string",
                      "description": "Chain identifier in CAIP-2 format",
                      "example": "eip155:1"
                    },
                    "last_updated": {
                      "type": "integer",
                      "description": "Timestamp when balance was last updated",
                      "example": 1753766031400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Wallet not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/wallets/{walletId}/transactions": {
      "get": {
        "summary": "Get wallet transactions",
        "description": "Retrieves transaction history for a specific wallet",
        "tags": ["Wallets"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Wallet ID",
            "example": "d0l66us361cm2p5777kpihjx"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "caip2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Chain identifier in CAIP-2 format",
            "example": "eip155:1"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Maximum number of transactions to return",
            "example": 25
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of transactions to skip",
            "example": 0
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "confirmed", "failed"]
            },
            "description": "Filter transactions by status",
            "example": "confirmed"
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet transactions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "description": "Transaction hash",
                            "example": "0x7c91ba85d67ef92cc15f3e9c8d8c5788e982cf83fabe9bfcc66a747aa0bd3701"
                          },
                          "from": {
                            "type": "string",
                            "description": "Sender address",
                            "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                          },
                          "to": {
                            "type": "string",
                            "description": "Recipient address",
                            "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                          },
                          "value": {
                            "type": "string",
                            "description": "Transaction value in wei",
                            "example": "1000000000000000"
                          },
                          "status": {
                            "type": "string",
                            "enum": ["pending", "confirmed", "failed"],
                            "description": "Transaction status",
                            "example": "confirmed"
                          },
                          "block_number": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Block number where transaction was included",
                            "example": 12345678
                          },
                          "gas_used": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Gas used by the transaction",
                            "example": 21000
                          },
                          "gas_price": {
                            "type": "string",
                            "nullable": true,
                            "description": "Gas price in wei",
                            "example": "20000000000"
                          },
                          "timestamp": {
                            "type": "integer",
                            "description": "Transaction timestamp",
                            "example": 1753766031400
                          },
                          "caip2": {
                            "type": "string",
                            "description": "Chain identifier in CAIP-2 format",
                            "example": "eip155:1"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of transactions",
                      "example": 150
                    },
                    "has_more": {
                      "type": "boolean",
                      "description": "Whether there are more transactions to fetch",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Wallet not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/wallets/{walletId}/rpc": {
      "post": {
        "summary": "Wallet RPC operations",
        "description": "Performs RPC operations on a wallet including message signing and transaction sending. Supports Ethereum methods (personal_sign, eth_sendTransaction, eth_signTransaction, eth_signTypedData_v4, eth_sign7702Authorization, secp256k1_sign), Solana methods (signMessage, signTransaction, signAndSendTransaction), and cross-chain raw signing (raw_sign).",
        "tags": ["Wallets"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Wallet ID",
            "example": "d0l66us361cm2p5777kpihjx"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-authorization-signature",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request authorization signature. If multiple signatures are required, they should be comma separated.",
            "example": "signature1,signature2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["personal_sign"],
                        "description": "RPC method for message signing",
                        "example": "personal_sign"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Message to sign",
                            "example": "Hello from Privy!"
                          },
                          "encoding": {
                            "type": "string",
                            "enum": ["utf-8", "hex"],
                            "description": "Message encoding",
                            "example": "utf-8"
                          }
                        },
                        "required": ["message", "encoding"]
                      }
                    },
                    "required": ["method", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["eth_sendTransaction"],
                        "description": "RPC method for sending transactions",
                        "example": "eth_sendTransaction"
                      },
                      "caip2": {
                        "type": "string",
                        "description": "Chain identifier in CAIP-2 format",
                        "example": "eip155:11155111"
                      },
                      "chain_type": {
                        "type": "string",
                        "enum": ["ethereum"],
                        "description": "Type of blockchain",
                        "example": "ethereum"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "string",
                                "description": "Sender address (optional)",
                                "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                              },
                              "to": {
                                "type": "string",
                                "description": "Recipient address",
                                "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                              },
                              "chain_id": {
                                "type": "string",
                                "description": "Chain ID (optional)",
                                "example": "11155111"
                              },
                              "nonce": {
                                "type": "string",
                                "description": "Transaction nonce (optional)",
                                "example": "0"
                              },
                              "data": {
                                "type": "string",
                                "description": "Transaction data (optional)",
                                "example": "0x"
                              },
                              "value": {
                                "type": "string",
                                "description": "Transaction value in wei as hexadecimal string",
                                "example": "0x2386F26FC10000"
                              },
                              "type": {
                                "type": "number",
                                "enum": [0, 1, 2],
                                "description": "Transaction type (optional)",
                                "example": 2
                              },
                              "gas_limit": {
                                "type": "string",
                                "description": "Gas limit (optional)",
                                "example": "21000"
                              },
                              "gas_price": {
                                "type": "string",
                                "description": "Gas price in wei (optional)",
                                "example": "20000000000"
                              },
                              "address": {
                                "type": "string",
                                "description": "Contract address (optional)",
                                "example": "0x..."
                              }
                            },
                            "required": ["to", "value"]
                          }
                        },
                        "required": ["transaction"]
                      }
                    },
                    "required": ["method", "caip2", "chain_type", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["eth_signTransaction"],
                        "description": "RPC method for signing transactions without sending",
                        "example": "eth_signTransaction"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "string",
                                "description": "Sender address",
                                "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                              },
                              "to": {
                                "type": "string",
                                "description": "Recipient address",
                                "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                              },
                              "chain_id": {
                                "type": "string",
                                "description": "Chain ID",
                                "example": "11155111"
                              },
                              "nonce": {
                                "type": "string",
                                "description": "Transaction nonce",
                                "example": "0"
                              },
                              "data": {
                                "type": "string",
                                "description": "Transaction data",
                                "example": "0x"
                              },
                              "value": {
                                "type": "string",
                                "description": "Transaction value in wei as hexadecimal string",
                                "example": "0x2386F26FC10000"
                              },
                              "type": {
                                "type": "number",
                                "enum": [0, 1, 2],
                                "description": "Transaction type",
                                "example": 2
                              },
                              "gas_limit": {
                                "type": "string",
                                "description": "Gas limit",
                                "example": "21000"
                              },
                              "gas_price": {
                                "type": "string",
                                "description": "Gas price in wei",
                                "example": "20000000000"
                              }
                            },
                            "required": [
                              "from",
                              "to",
                              "chain_id",
                              "nonce",
                              "data",
                              "value",
                              "type",
                              "gas_limit",
                              "gas_price"
                            ]
                          }
                        },
                        "required": ["transaction"]
                      }
                    },
                    "required": ["method", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["eth_signTypedData_v4"],
                        "description": "RPC method for signing typed data (EIP-712)",
                        "example": "eth_signTypedData_v4"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Address to sign with",
                            "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                          },
                          "typedData": {
                            "type": "object",
                            "description": "EIP-712 typed data structure",
                            "properties": {
                              "types": {
                                "type": "object",
                                "description": "Type definitions"
                              },
                              "primaryType": {
                                "type": "string",
                                "description": "Primary type to sign",
                                "example": "Person"
                              },
                              "domain": {
                                "type": "object",
                                "description": "Domain separator"
                              },
                              "message": {
                                "type": "object",
                                "description": "Message data to sign"
                              }
                            },
                            "required": [
                              "types",
                              "primaryType",
                              "domain",
                              "message"
                            ]
                          }
                        },
                        "required": ["address", "typedData"]
                      }
                    },
                    "required": ["method", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["eth_sign7702Authorization"],
                        "description": "RPC method for signing 7702 authorization",
                        "example": "eth_sign7702Authorization"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Address to sign with",
                            "example": "0x226d2AeCE1a29d84FD133aEAa1584BaE853CF02D"
                          },
                          "authorization": {
                            "type": "object",
                            "description": "7702 authorization data",
                            "properties": {
                              "authority": {
                                "type": "string",
                                "description": "Authority address",
                                "example": "0x..."
                              },
                              "nonce": {
                                "type": "string",
                                "description": "Authorization nonce",
                                "example": "0x..."
                              },
                              "validUntil": {
                                "type": "string",
                                "description": "Valid until timestamp",
                                "example": "0x..."
                              }
                            },
                            "required": ["authority", "nonce", "validUntil"]
                          }
                        },
                        "required": ["address", "authorization"]
                      }
                    },
                    "required": ["method", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["secp256k1_sign"],
                        "description": "RPC method for secp256k1 signing",
                        "example": "secp256k1_sign"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Message to sign",
                            "example": "0x..."
                          },
                          "encoding": {
                            "type": "string",
                            "enum": ["hex"],
                            "description": "Message encoding",
                            "example": "hex"
                          }
                        },
                        "required": ["message", "encoding"]
                      }
                    },
                    "required": ["method", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["signMessage"],
                        "description": "RPC method for signing Solana messages",
                        "example": "signMessage"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Base64 encoded message to sign",
                            "example": "aGVsbG8sIFByaXZ5IQ="
                          },
                          "encoding": {
                            "type": "string",
                            "enum": ["base64"],
                            "description": "Message encoding",
                            "example": "base64"
                          }
                        },
                        "required": ["message", "encoding"]
                      }
                    },
                    "required": ["method", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["signTransaction"],
                        "description": "RPC method for signing Solana transactions",
                        "example": "signTransaction"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "transaction": {
                            "type": "string",
                            "description": "Base64 encoded serialized transaction to sign",
                            "example": "AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDRpb0mdmKftapwzzqUtlcDnuWbw8vwlyiyuWyyieQFKESezu52HWNss0SAcb60ftz7DSpgTwUmfUSl1CYHJ91GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAScgJ7J0AXFr1azCEvB1Y5zpiF4eXR+yTW0UB7am+E/MBAgIAAQwCAAAAQEIPAAAAAAA="
                          },
                          "encoding": {
                            "type": "string",
                            "enum": ["base64"],
                            "description": "Transaction encoding",
                            "example": "base64"
                          }
                        },
                        "required": ["transaction", "encoding"]
                      }
                    },
                    "required": ["method", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["signAndSendTransaction"],
                        "description": "RPC method for signing and sending Solana transactions",
                        "example": "signAndSendTransaction"
                      },
                      "caip2": {
                        "type": "string",
                        "description": "Chain identifier in CAIP-2 format",
                        "example": "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "transaction": {
                            "type": "string",
                            "description": "Base64 encoded serialized transaction to sign and send",
                            "example": "AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDRpb0mdmKftapwzzqUtlcDnuWbw8vwlyiyuWyyieQFKESezu52HWNss0SAcb60ftz7DSpgTwUmfUSl1CYHJ91GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAScgJ7J0AXFr1azCEvB1Y5zpiF4eXR+yTW0UB7am+E/MBAgIAAQwCAAAAQEIPAAAAAAA="
                          },
                          "encoding": {
                            "type": "string",
                            "enum": ["base64"],
                            "description": "Transaction encoding",
                            "example": "base64"
                          }
                        },
                        "required": ["transaction", "encoding"]
                      }
                    },
                    "required": ["method", "caip2", "params"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["raw_sign"],
                        "description": "RPC method for signing raw hash using wallet's private key",
                        "example": "raw_sign"
                      },
                      "params": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "description": "Raw hash to sign",
                            "example": "0x0775aeed9c9ce6e0fbc4db25c5e4e6368029651c905c286f813126a09025a21e"
                          }
                        },
                        "required": ["hash"]
                      }
                    },
                    "required": ["method", "params"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "RPC operation completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["personal_sign"],
                          "description": "RPC method that was executed",
                          "example": "personal_sign"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "description": "Hex signature of the signed message",
                              "example": "0x292d67e9c5178447f1c5344b3122997dfba8f00e43102d0b746301e9b4afbbf67d952bf870878d92b8eb066da205840458c0a5fb3f53253dbe1adf9c143678311c"
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["utf-8", "hex"],
                              "description": "Signature encoding format",
                              "example": "hex"
                            }
                          },
                          "required": ["signature", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["eth_sendTransaction"],
                          "description": "RPC method that was executed",
                          "example": "eth_sendTransaction"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "hash": {
                              "type": "string",
                              "description": "Transaction hash",
                              "example": "0xfc3a736ab2e34e13be2b0b11b39dbc0232a2e755a11aa5a9219890d3b2c6c7d8"
                            },
                            "caip2": {
                              "type": "string",
                              "description": "Chain identifier in CAIP-2 format",
                              "example": "eip155:11155111"
                            },
                            "transaction_id": {
                              "type": "string",
                              "description": "Internal transaction ID",
                              "example": "y90vpg3bnkjxhw541c2zc6a9"
                            }
                          },
                          "required": ["hash", "caip2", "transaction_id"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["eth_signTransaction"],
                          "description": "RPC method that was executed",
                          "example": "eth_signTransaction"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signed_transaction": {
                              "type": "string",
                              "description": "Signed transaction in RLP format",
                              "example": "0x02f870830138de80830f4240830f437480940b81418147df37155d643b5cb65ba6c8cb7aba76872000000000000480c080a05c11a2166ec56189d993dec477477d962ce0d4c466ab7ed8982110621ec87a57a003c796590c0c62eac30acd412f2aa0e8ad740c4ded86fb64d3326ee4c0ea804c"
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["rlp"],
                              "description": "Transaction encoding format",
                              "example": "rlp"
                            }
                          },
                          "required": ["signed_transaction", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["eth_signTypedData_v4"],
                          "description": "RPC method that was executed",
                          "example": "eth_signTypedData_v4"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "description": "Hex signature of the typed data",
                              "example": "0x..."
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["hex"],
                              "description": "Signature encoding format",
                              "example": "hex"
                            }
                          },
                          "required": ["signature", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["eth_sign7702Authorization"],
                          "description": "RPC method that was executed",
                          "example": "eth_sign7702Authorization"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "description": "Hex signature of the 7702 authorization",
                              "example": "0x..."
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["hex"],
                              "description": "Signature encoding format",
                              "example": "hex"
                            }
                          },
                          "required": ["signature", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["secp256k1_sign"],
                          "description": "RPC method that was executed",
                          "example": "secp256k1_sign"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "description": "Hex signature using secp256k1",
                              "example": "0x..."
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["hex"],
                              "description": "Signature encoding format",
                              "example": "hex"
                            }
                          },
                          "required": ["signature", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["signMessage"],
                          "description": "RPC method that was executed",
                          "example": "signMessage"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "description": "Base64 signature of the signed message",
                              "example": "76wpEsq9FS4QOInePQUY3b4GCXdVwLv+nNp4NnI+EPTAPVwvXCjzjUW/gD6Vuh4KaD+7p2X4MaTu6xYu0rMTAA=="
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["base64"],
                              "description": "Signature encoding format",
                              "example": "base64"
                            }
                          },
                          "required": ["signature", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["signTransaction"],
                          "description": "RPC method that was executed",
                          "example": "signTransaction"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signed_transaction": {
                              "type": "string",
                              "description": "Base64 encoded signed transaction",
                              "example": "AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDRpb0mdmKftapwzzqUtlcDnuWbw8vwlyiyuWyyieQFKESezu52HWNss0SAcb60ftz7DSpgTwUmfUSl1CYHJ91GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAScgJ7J0AXFr1azCEvB1Y5zpiF4eXR"
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["base64"],
                              "description": "Transaction encoding format",
                              "example": "base64"
                            }
                          },
                          "required": ["signed_transaction", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["signAndSendTransaction"],
                          "description": "RPC method that was executed",
                          "example": "signAndSendTransaction"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "hash": {
                              "type": "string",
                              "description": "Transaction hash",
                              "example": "22VS6wqrbeaN21ku3pjEjfnrWgk1deiFBSB1kZzS8ivr2G8wYmpdnV3W7oxpjFPGkt5bhvZvK1QBzuCfUPUYYFQq"
                            },
                            "caip2": {
                              "type": "string",
                              "description": "Chain identifier in CAIP-2 format",
                              "example": "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1"
                            },
                            "transaction_id": {
                              "type": "string",
                              "description": "Internal transaction ID",
                              "example": "nyorsf87s9d08jimesv3n8yq"
                            }
                          },
                          "required": ["hash", "caip2", "transaction_id"]
                        }
                      },
                      "required": ["method", "data"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": ["raw_sign"],
                          "description": "RPC method that was executed",
                          "example": "raw_sign"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "description": "Hex signature of the raw hash",
                              "example": "0x292d67e9c5178447f1c5344b3122997dfba8f00e43102d0b746301e9b4afbbf67d952bf870878d92b8eb066da205840458c0a5fb3f53253dbe1adf9c143678311c"
                            },
                            "encoding": {
                              "type": "string",
                              "enum": ["hex"],
                              "description": "Signature encoding format",
                              "example": "hex"
                            }
                          },
                          "required": ["signature", "encoding"]
                        }
                      },
                      "required": ["method", "data"]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid RPC method or parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Wallet not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Too many RPC requests. Please try again later."
                    },
                    "retry_after": {
                      "type": "integer",
                      "description": "Number of seconds to wait before retrying",
                      "example": 60
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/quorums": {
      "get": {
        "summary": "Get key quorums",
        "description": "Retrieves all key quorums for a specific app",
        "tags": ["Key Quorums"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "Key quorums retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique key quorum identifier",
                        "example": "qsz36nck6u0z28lluuqkin98"
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Display name for the key quorum",
                        "example": "Dummy Key"
                      },
                      "authorization_threshold": {
                        "type": "integer",
                        "description": "Number of signatures required for authorization",
                        "example": 1
                      },
                      "wallets_owned": {
                        "type": "integer",
                        "description": "Number of wallets owned by this key quorum",
                        "example": 0
                      },
                      "policies_owned": {
                        "type": "integer",
                        "description": "Number of policies owned by this key quorum",
                        "example": 0
                      },
                      "signer_for": {
                        "type": "integer",
                        "description": "Number of wallets this key quorum is a signer for",
                        "example": 0
                      },
                      "created_at": {
                        "type": "integer",
                        "description": "Timestamp when the key quorum was created",
                        "example": 1753768526634
                      },
                      "authorization_keys": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "public_key": {
                              "type": "string",
                              "description": "Public key in PEM format",
                              "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                            },
                            "display_name": {
                              "type": "string",
                              "nullable": true,
                              "description": "Display name for the authorization key"
                            }
                          }
                        },
                        "description": "Array of authorization keys in the quorum"
                      },
                      "user_session_keys": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "description": "User session keys associated with the quorum"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "post": {
        "summary": "Create key quorum",
        "description": "Creates a new key quorum for authorization management",
        "tags": ["Key Quorums"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Display name for the key quorum",
                    "example": "Dummy Key"
                  },
                  "public_keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of public keys in PEM format",
                    "example": [
                      "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                    ]
                  },
                  "authorization_threshold": {
                    "type": "integer",
                    "description": "Number of signatures required for authorization",
                    "example": 1
                  }
                },
                "required": [
                  "display_name",
                  "public_keys",
                  "authorization_threshold"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Key quorum created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique key quorum identifier",
                      "example": "qsz36nck6u0z28lluuqkin98"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "Display name for the key quorum",
                      "example": "Dummy Key"
                    },
                    "authorization_threshold": {
                      "type": "integer",
                      "description": "Number of signatures required for authorization",
                      "example": 1
                    },
                    "wallets_owned": {
                      "type": "integer",
                      "description": "Number of wallets owned by this key quorum",
                      "example": 0
                    },
                    "policies_owned": {
                      "type": "integer",
                      "description": "Number of policies owned by this key quorum",
                      "example": 0
                    },
                    "signer_for": {
                      "type": "integer",
                      "description": "Number of wallets this key quorum is a signer for",
                      "example": 0
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when the key quorum was created",
                      "example": 1753768526634
                    },
                    "authorization_keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_key": {
                            "type": "string",
                            "description": "Public key in PEM format",
                            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                          },
                          "display_name": {
                            "type": "string",
                            "nullable": true,
                            "description": "Display name for the authorization key"
                          }
                        }
                      },
                      "description": "Array of authorization keys in the quorum"
                    },
                    "user_session_keys": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "User session keys associated with the quorum"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid key quorum configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/quorums/{keyQuorumId}": {
      "get": {
        "summary": "Get key quorum",
        "description": "Retrieves details of a specific key quorum",
        "tags": ["Key Quorums"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "keyQuorumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Key quorum ID",
            "example": "qsz36nck6u0z28lluuqkin98"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "Key quorum details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique key quorum identifier",
                      "example": "qsz36nck6u0z28lluuqkin98"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "Display name for the key quorum",
                      "example": "Dummy Key"
                    },
                    "authorization_threshold": {
                      "type": "integer",
                      "description": "Number of signatures required for authorization",
                      "example": 1
                    },
                    "wallets_owned": {
                      "type": "integer",
                      "description": "Number of wallets owned by this key quorum",
                      "example": 0
                    },
                    "policies_owned": {
                      "type": "integer",
                      "description": "Number of policies owned by this key quorum",
                      "example": 0
                    },
                    "signer_for": {
                      "type": "integer",
                      "description": "Number of wallets this key quorum is a signer for",
                      "example": 0
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when the key quorum was created",
                      "example": 1753768526634
                    },
                    "authorization_keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_key": {
                            "type": "string",
                            "description": "Public key in PEM format",
                            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                          },
                          "display_name": {
                            "type": "string",
                            "nullable": true,
                            "description": "Display name for the authorization key"
                          }
                        }
                      },
                      "description": "Array of authorization keys in the quorum"
                    },
                    "user_session_keys": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "User session keys associated with the quorum"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key quorum not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Key quorum not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "patch": {
        "summary": "Update key quorum",
        "description": "Updates a specific key quorum's configuration",
        "tags": ["Key Quorums"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "keyQuorumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Key quorum ID",
            "example": "qsz36nck6u0z28lluuqkin98"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Display name for the key quorum",
                    "example": "Updated Key Name"
                  },
                  "public_keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of public keys in PEM format",
                    "example": [
                      "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                    ]
                  },
                  "authorization_threshold": {
                    "type": "integer",
                    "description": "Number of signatures required for authorization",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Key quorum updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique key quorum identifier",
                      "example": "qsz36nck6u0z28lluuqkin98"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "Display name for the key quorum",
                      "example": "Updated Key Name"
                    },
                    "authorization_threshold": {
                      "type": "integer",
                      "description": "Number of signatures required for authorization",
                      "example": 2
                    },
                    "wallets_owned": {
                      "type": "integer",
                      "description": "Number of wallets owned by this key quorum",
                      "example": 0
                    },
                    "policies_owned": {
                      "type": "integer",
                      "description": "Number of policies owned by this key quorum",
                      "example": 0
                    },
                    "signer_for": {
                      "type": "integer",
                      "description": "Number of wallets this key quorum is a signer for",
                      "example": 0
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when the key quorum was created",
                      "example": 1753768526634
                    },
                    "authorization_keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_key": {
                            "type": "string",
                            "description": "Public key in PEM format",
                            "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                          },
                          "display_name": {
                            "type": "string",
                            "nullable": true,
                            "description": "Display name for the authorization key"
                          }
                        }
                      },
                      "description": "Array of authorization keys in the quorum"
                    },
                    "user_session_keys": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "User session keys associated with the quorum"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid key quorum configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key quorum not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Key quorum not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "delete": {
        "summary": "Delete key quorum",
        "description": "Deletes a specific key quorum",
        "tags": ["Key Quorums"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "keyQuorumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Key quorum ID",
            "example": "qsz36nck6u0z28lluuqkin98"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "Key quorum deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key quorum not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Key quorum not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/policies": {
      "post": {
        "summary": "Create policy",
        "description": "Create a new policy with rules for controlling wallet operations",
        "tags": ["Policies"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-authorization-signature",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request authorization signature. If multiple signatures are required, they should be comma separated.",
            "example": "signature1,signature2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "Policy version",
                    "example": "1.0"
                  },
                  "name": {
                    "type": "string",
                    "description": "Policy name",
                    "example": "Allowlisted stablecoins"
                  },
                  "chain_type": {
                    "type": "string",
                    "enum": ["ethereum", "solana"],
                    "description": "Type of blockchain",
                    "example": "ethereum"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Rule name",
                          "example": "Allowlist USDC contract on Base"
                        },
                        "method": {
                          "type": "string",
                          "description": "RPC method to apply rule to",
                          "example": "eth_sendTransaction"
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field_source": {
                                "type": "string",
                                "description": "Source of the field to check",
                                "example": "ethereum_transaction"
                              },
                              "field": {
                                "type": "string",
                                "description": "Field name to check",
                                "example": "to"
                              },
                              "operator": {
                                "type": "string",
                                "enum": [
                                  "eq",
                                  "ne",
                                  "in",
                                  "nin",
                                  "gt",
                                  "gte",
                                  "lt",
                                  "lte"
                                ],
                                "description": "Comparison operator",
                                "example": "eq"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value to compare against",
                                "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                              }
                            },
                            "required": [
                              "field_source",
                              "field",
                              "operator",
                              "value"
                            ]
                          }
                        },
                        "action": {
                          "type": "string",
                          "enum": ["ALLOW", "DENY"],
                          "description": "Action to take if conditions are met",
                          "example": "ALLOW"
                        }
                      },
                      "required": ["name", "method", "conditions", "action"]
                    }
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "public_key": {
                        "type": "string",
                        "description": "Owner's public key",
                        "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                      }
                    }
                  },
                  "owner_id": {
                    "type": "string",
                    "description": "Owner ID",
                    "example": "user123"
                  }
                },
                "required": ["version", "name", "chain_type", "rules"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Policy created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Policy ID",
                      "example": "tb54eps4z44ed0jepousxi4n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name",
                      "example": "Allowlisted stablecoins"
                    },
                    "chain_type": {
                      "type": "string",
                      "description": "Type of blockchain",
                      "example": "ethereum"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Rule name",
                            "example": "Allowlist USDC contract on Base"
                          },
                          "method": {
                            "type": "string",
                            "description": "RPC method",
                            "example": "eth_sendTransaction"
                          },
                          "conditions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field_source": {
                                  "type": "string",
                                  "description": "Field source",
                                  "example": "ethereum_transaction"
                                },
                                "field": {
                                  "type": "string",
                                  "description": "Field name",
                                  "example": "to"
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "Operator",
                                  "example": "eq"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value",
                                  "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                                }
                              }
                            }
                          },
                          "action": {
                            "type": "string",
                            "description": "Action",
                            "example": "ALLOW"
                          }
                        }
                      }
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Owner ID",
                      "example": null
                    },
                    "version": {
                      "type": "string",
                      "description": "Policy version",
                      "example": "1.0"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Creation timestamp",
                      "example": 1741833088894
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid policy configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/policies/{policyId}": {
      "get": {
        "summary": "Get policy",
        "description": "Get a policy by policy ID",
        "tags": ["Policies"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "description": "Policy ID",
            "example": "tb54eps4z44ed0jepousxi4n"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Policy ID",
                      "example": "tb54eps4z44ed0jepousxi4n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name",
                      "example": "Allowlisted stablecoins"
                    },
                    "chain_type": {
                      "type": "string",
                      "description": "Type of blockchain",
                      "example": "ethereum"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Rule name",
                            "example": "Allowlist USDC contract on Base"
                          },
                          "method": {
                            "type": "string",
                            "description": "RPC method",
                            "example": "eth_sendTransaction"
                          },
                          "conditions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field_source": {
                                  "type": "string",
                                  "description": "Field source",
                                  "example": "ethereum_transaction"
                                },
                                "field": {
                                  "type": "string",
                                  "description": "Field name",
                                  "example": "to"
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "Operator",
                                  "example": "eq"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value",
                                  "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                                }
                              }
                            }
                          },
                          "action": {
                            "type": "string",
                            "description": "Action",
                            "example": "ALLOW"
                          }
                        }
                      }
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Owner ID",
                      "example": null
                    },
                    "version": {
                      "type": "string",
                      "description": "Policy version",
                      "example": "1.0"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Creation timestamp",
                      "example": 1741833088894
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Policy not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "patch": {
        "summary": "Update policy",
        "description": "Update a policy by policy ID",
        "tags": ["Policies"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "description": "Policy ID",
            "example": "tb54eps4z44ed0jepousxi4n"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-authorization-signature",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request authorization signature. If multiple signatures are required, they should be comma separated.",
            "example": "signature1,signature2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Policy name",
                    "example": "Updated policy name"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Rule name",
                          "example": "Allowlist USDC contract on Base"
                        },
                        "method": {
                          "type": "string",
                          "description": "RPC method to apply rule to",
                          "example": "eth_sendTransaction"
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field_source": {
                                "type": "string",
                                "description": "Source of the field to check",
                                "example": "ethereum_transaction"
                              },
                              "field": {
                                "type": "string",
                                "description": "Field name to check",
                                "example": "to"
                              },
                              "operator": {
                                "type": "string",
                                "enum": [
                                  "eq",
                                  "ne",
                                  "in",
                                  "nin",
                                  "gt",
                                  "gte",
                                  "lt",
                                  "lte"
                                ],
                                "description": "Comparison operator",
                                "example": "eq"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value to compare against",
                                "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                              }
                            },
                            "required": [
                              "field_source",
                              "field",
                              "operator",
                              "value"
                            ]
                          }
                        },
                        "action": {
                          "type": "string",
                          "enum": ["ALLOW", "DENY"],
                          "description": "Action to take if conditions are met",
                          "example": "ALLOW"
                        }
                      },
                      "required": ["name", "method", "conditions", "action"]
                    }
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "public_key": {
                        "type": "string",
                        "description": "Owner's public key",
                        "example": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGstDoTK152LGCLUsDYqZ8Lthjo7Q\nseVNOXCM89Ddt5boDlpWAqrT1YZUDr5SCtNC1fx/vC6ExaTUbEcOdEyVHA==\n-----END PUBLIC KEY-----"
                      }
                    }
                  },
                  "owner_id": {
                    "type": "string",
                    "description": "Owner ID",
                    "example": "user123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Policy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Policy ID",
                      "example": "tb54eps4z44ed0jepousxi4n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Policy name",
                      "example": "Updated policy name"
                    },
                    "chain_type": {
                      "type": "string",
                      "description": "Type of blockchain",
                      "example": "ethereum"
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Rule name",
                            "example": "Allowlist USDC contract on Base"
                          },
                          "method": {
                            "type": "string",
                            "description": "RPC method",
                            "example": "eth_sendTransaction"
                          },
                          "conditions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field_source": {
                                  "type": "string",
                                  "description": "Field source",
                                  "example": "ethereum_transaction"
                                },
                                "field": {
                                  "type": "string",
                                  "description": "Field name",
                                  "example": "to"
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "Operator",
                                  "example": "eq"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value",
                                  "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                                }
                              }
                            }
                          },
                          "action": {
                            "type": "string",
                            "description": "Action",
                            "example": "ALLOW"
                          }
                        }
                      }
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Owner ID",
                      "example": null
                    },
                    "version": {
                      "type": "string",
                      "description": "Policy version",
                      "example": "1.0"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Creation timestamp",
                      "example": 1741833088894
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid policy configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Policy not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "delete": {
        "summary": "Delete policy",
        "description": "Delete a policy by policy ID",
        "tags": ["Policies"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "description": "Policy ID",
            "example": "tb54eps4z44ed0jepousxi4n"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-authorization-signature",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request authorization signature. If multiple signatures are required, they should be comma separated.",
            "example": "signature1,signature2"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Policy not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/policies/{policyId}/rules": {
      "post": {
        "summary": "Create policy rule",
        "description": "Create a new rule within a policy",
        "tags": ["Policy Rules"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "description": "Policy ID",
            "example": "tb54eps4z44ed0jepousxi4n"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-authorization-signature",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request authorization signature. If multiple signatures are required, they should be comma separated.",
            "example": "signature1,signature2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Rule name",
                    "example": "Allowlist USDC contract on Base"
                  },
                  "method": {
                    "type": "string",
                    "description": "RPC method to apply rule to",
                    "example": "eth_sendTransaction"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field_source": {
                          "type": "string",
                          "description": "Source of the field to check",
                          "example": "ethereum_transaction"
                        },
                        "field": {
                          "type": "string",
                          "description": "Field name to check",
                          "example": "to"
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "eq",
                            "ne",
                            "in",
                            "nin",
                            "gt",
                            "gte",
                            "lt",
                            "lte"
                          ],
                          "description": "Comparison operator",
                          "example": "eq"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value to compare against",
                          "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                        }
                      },
                      "required": ["field_source", "field", "operator", "value"]
                    }
                  },
                  "action": {
                    "type": "string",
                    "enum": ["ALLOW", "DENY"],
                    "description": "Action to take if conditions are met",
                    "example": "ALLOW"
                  }
                },
                "required": ["name", "method", "conditions", "action"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Policy rule created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Rule ID",
                      "example": "rule_abc123def456"
                    },
                    "name": {
                      "type": "string",
                      "description": "Rule name",
                      "example": "Allowlist USDC contract on Base"
                    },
                    "method": {
                      "type": "string",
                      "description": "RPC method",
                      "example": "eth_sendTransaction"
                    },
                    "conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field_source": {
                            "type": "string",
                            "description": "Field source",
                            "example": "ethereum_transaction"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field name",
                            "example": "to"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Operator",
                            "example": "eq"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value",
                            "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                          }
                        }
                      }
                    },
                    "action": {
                      "type": "string",
                      "description": "Action",
                      "example": "ALLOW"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Creation timestamp",
                      "example": 1741833088894
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid rule configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Policy not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/policies/{policyId}/rules/{ruleId}": {
      "get": {
        "summary": "Get policy rule",
        "description": "Get a specific rule within a policy",
        "tags": ["Policy Rules"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "description": "Policy ID",
            "example": "tb54eps4z44ed0jepousxi4n"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Rule ID",
            "example": "rule_abc123def456"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy rule retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Rule ID",
                      "example": "rule_abc123def456"
                    },
                    "name": {
                      "type": "string",
                      "description": "Rule name",
                      "example": "Allowlist USDC contract on Base"
                    },
                    "method": {
                      "type": "string",
                      "description": "RPC method",
                      "example": "eth_sendTransaction"
                    },
                    "conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field_source": {
                            "type": "string",
                            "description": "Field source",
                            "example": "ethereum_transaction"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field name",
                            "example": "to"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Operator",
                            "example": "eq"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value",
                            "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                          }
                        }
                      }
                    },
                    "action": {
                      "type": "string",
                      "description": "Action",
                      "example": "ALLOW"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Creation timestamp",
                      "example": 1741833088894
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Policy or rule not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Policy or rule not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "patch": {
        "summary": "Update policy rule",
        "description": "Update a specific rule within a policy",
        "tags": ["Policy Rules"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "description": "Policy ID",
            "example": "tb54eps4z44ed0jepousxi4n"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Rule ID",
            "example": "rule_abc123def456"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-authorization-signature",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request authorization signature. If multiple signatures are required, they should be comma separated.",
            "example": "signature1,signature2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Rule name",
                    "example": "Updated rule name"
                  },
                  "method": {
                    "type": "string",
                    "description": "RPC method to apply rule to",
                    "example": "eth_sendTransaction"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field_source": {
                          "type": "string",
                          "description": "Source of the field to check",
                          "example": "ethereum_transaction"
                        },
                        "field": {
                          "type": "string",
                          "description": "Field name to check",
                          "example": "to"
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "eq",
                            "ne",
                            "in",
                            "nin",
                            "gt",
                            "gte",
                            "lt",
                            "lte"
                          ],
                          "description": "Comparison operator",
                          "example": "eq"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value to compare against",
                          "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                        }
                      },
                      "required": ["field_source", "field", "operator", "value"]
                    }
                  },
                  "action": {
                    "type": "string",
                    "enum": ["ALLOW", "DENY"],
                    "description": "Action to take if conditions are met",
                    "example": "ALLOW"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Policy rule updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Rule ID",
                      "example": "rule_abc123def456"
                    },
                    "name": {
                      "type": "string",
                      "description": "Rule name",
                      "example": "Updated rule name"
                    },
                    "method": {
                      "type": "string",
                      "description": "RPC method",
                      "example": "eth_sendTransaction"
                    },
                    "conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field_source": {
                            "type": "string",
                            "description": "Field source",
                            "example": "ethereum_transaction"
                          },
                          "field": {
                            "type": "string",
                            "description": "Field name",
                            "example": "to"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Operator",
                            "example": "eq"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value",
                            "example": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                          }
                        }
                      }
                    },
                    "action": {
                      "type": "string",
                      "description": "Action",
                      "example": "ALLOW"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Creation timestamp",
                      "example": 1741833088894
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid rule configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Policy or rule not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Policy or rule not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "delete": {
        "summary": "Delete policy rule",
        "description": "Delete a specific rule within a policy",
        "tags": ["Policy Rules"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "description": "Policy ID",
            "example": "tb54eps4z44ed0jepousxi4n"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Rule ID",
            "example": "rule_abc123def456"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-authorization-signature",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request authorization signature. If multiple signatures are required, they should be comma separated.",
            "example": "signature1,signature2"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy rule deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Policy or rule not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Policy or rule not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/allowlist": {
      "get": {
        "summary": "Get allowlist entries",
        "description": "Get the allowlist entries for an app",
        "tags": ["Apps"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "Allowlist entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Allowlist entry ID",
                        "example": "cmdphxoym01e8ky0jwos5bg2j"
                      },
                      "rule_type": {
                        "type": "string",
                        "description": "Type of allowlist rule",
                        "example": "emailDomain"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value for the allowlist rule",
                        "example": "hashira.io"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "post": {
        "summary": "Add user to allowlist",
        "description": "Add a user's email address, phone number, or wallet address to the allowlist for your app",
        "tags": ["Apps"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "email",
                      "emailDomain",
                      "phoneNumber",
                      "ethereumAddress",
                      "solanaAddress"
                    ],
                    "description": "The type of account to add to the allowlist",
                    "example": "email"
                  },
                  "value": {
                    "type": "string",
                    "description": "The identifier of the account to add to the allowlist. Should be the corresponding email address, phone number, or wallet address",
                    "example": "user@example.com"
                  }
                },
                "required": ["type", "value"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User added to allowlist successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Allowlist entry ID",
                      "example": "cmdphxoym01e8ky0jwos5bg2j"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of allowlist entry",
                      "example": "email"
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of the allowlist entry",
                      "example": "user@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid allowlist entry"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "delete": {
        "summary": "Remove entry from allowlist",
        "description": "Remove an allowlist entry by its ID. You can obtain the ID by getting your current allowlist.",
        "tags": ["Apps"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the allowlist entry to be removed. You can obtain this ID by getting your current allowlist.",
                    "example": "clpa828s4001hl90f6dxoksrg"
                  }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Allowlist entry removed successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid allowlist entry ID"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found or allowlist entry not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Allowlist entry not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/denylist": {
      "get": {
        "summary": "Get denylist entries",
        "description": "Get the denylist entries for an app. This is a paginated query that returns up to 1000 denylist entries per request.",
        "tags": ["Apps"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Cursor for pagination. When requesting the first batch, do not include. For subsequent batches, use the next_cursor from the previous response.",
            "example": "clpa828s4001hl90f6dxoksrg"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1000
            },
            "description": "Number of denylist entries to return. Defaults to 1000.",
            "example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Denylist entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Denylist entry ID",
                            "example": "cmdphxoym01e8ky0jwos5bg2j"
                          },
                          "rule_type": {
                            "type": "string",
                            "description": "Type of denylist rule",
                            "example": "emailDomain"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for the denylist rule",
                            "example": "hashira.io"
                          }
                        }
                      }
                    },
                    "next_cursor": {
                      "type": "string",
                      "description": "Cursor for pagination",
                      "example": "cmdphxoym01e8ky0jwos5bg2j"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "post": {
        "summary": "Add user to denylist",
        "description": "Add a user's email address, phone number, or wallet address to the denylist for your app",
        "tags": ["Apps"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "email",
                      "emailDomain",
                      "phoneNumber",
                      "ethereumAddress",
                      "solanaAddress"
                    ],
                    "description": "Specifies that the request adds an email address, email domain, phone number, EVM wallet address or Solana wallet address to the denylist",
                    "example": "email"
                  },
                  "value": {
                    "type": "string",
                    "description": "The identifier of the account to add to the denylist. Should be the corresponding email address, phone number, or wallet address",
                    "example": "user@example.com"
                  }
                },
                "required": ["type", "value"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User added to denylist successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Denylist entry ID",
                      "example": "cmdphxoym01e8ky0jwos5bg2j"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of denylist entry",
                      "example": "email"
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of the denylist entry",
                      "example": "user@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid denylist entry"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "delete": {
        "summary": "Remove entry from denylist",
        "description": "Remove a denylist entry by its ID. You can obtain the ID by getting your current denylist.",
        "tags": ["Apps"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the denylist entry to be removed. You can obtain this ID by getting your current denylist.",
                    "example": "clpa828s4001hl90f6dxoksrg"
                  }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Denylist entry removed successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid denylist entry ID"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found or denylist entry not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Denylist entry not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/mfa_configuration": {
      "get": {
        "summary": "Get MFA configuration",
        "description": "Get Multi-Factor Authentication configuration for an app",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "responses": {
          "200": {
            "description": "MFA configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "MFA configuration ID",
                      "example": "cmdh1h9cg01dyjg0mu3v9libp"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether MFA is enabled for the app",
                      "example": true
                    },
                    "sms_enabled": {
                      "type": "boolean",
                      "description": "Whether SMS-based MFA is enabled",
                      "example": false
                    },
                    "totp_enabled": {
                      "type": "boolean",
                      "description": "Whether TOTP-based MFA is enabled",
                      "example": true
                    },
                    "passkey_enabled": {
                      "type": "boolean",
                      "description": "Whether passkey-based MFA is enabled",
                      "example": false
                    },
                    "expiry_window": {
                      "type": "integer",
                      "description": "MFA token expiry window in minutes",
                      "example": 15
                    },
                    "updated_at": {
                      "type": "integer",
                      "description": "Timestamp when MFA configuration was last updated",
                      "example": 1753340190
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when MFA configuration was created",
                      "example": 1753340190
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found or MFA configuration not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "MFA configuration not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "put": {
        "summary": "Update MFA configuration",
        "description": "Update Multi-Factor Authentication configuration for an app",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable MFA for the app",
                    "example": true
                  },
                  "sms_enabled": {
                    "type": "boolean",
                    "description": "Whether to enable SMS-based MFA",
                    "example": false
                  },
                  "totp_enabled": {
                    "type": "boolean",
                    "description": "Whether to enable TOTP-based MFA",
                    "example": true
                  },
                  "passkey_enabled": {
                    "type": "boolean",
                    "description": "Whether to enable passkey-based MFA",
                    "example": true
                  },
                  "expiry_window": {
                    "type": "integer",
                    "description": "MFA token expiry window in minutes",
                    "example": 15
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MFA configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "MFA configuration ID",
                      "example": "cmdh1h9cg01dyjg0mu3v9libp"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether MFA is enabled for the app",
                      "example": true
                    },
                    "sms_enabled": {
                      "type": "boolean",
                      "description": "Whether SMS-based MFA is enabled",
                      "example": false
                    },
                    "totp_enabled": {
                      "type": "boolean",
                      "description": "Whether TOTP-based MFA is enabled",
                      "example": true
                    },
                    "passkey_enabled": {
                      "type": "boolean",
                      "description": "Whether passkey-based MFA is enabled",
                      "example": true
                    },
                    "expiry_window": {
                      "type": "integer",
                      "description": "MFA token expiry window in minutes",
                      "example": 15
                    },
                    "updated_at": {
                      "type": "integer",
                      "description": "Timestamp when MFA configuration was last updated",
                      "example": 1753854899
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when MFA configuration was created",
                      "example": 1753340190
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid MFA configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/session_config": {
      "get": {
        "summary": "Get session configuration",
        "description": "Get session and token lifetime configuration for an app",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Session configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionTimeoutMinutes": {
                      "type": "integer",
                      "description": "Session timeout in minutes",
                      "example": 57600
                    },
                    "sessionInactivityWindowMinutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Session inactivity window in minutes",
                      "example": null
                    },
                    "accessTokenLifetimeMinutes": {
                      "type": "integer",
                      "description": "Access token lifetime in minutes",
                      "example": 10
                    },
                    "idTokenLifetimeMinutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "ID token lifetime in minutes",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found or session configuration not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session configuration not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "put": {
        "summary": "Update session configuration",
        "description": "Update session and token lifetime configuration for an app",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session_timeout_minutes": {
                    "type": "integer",
                    "description": "Session timeout in minutes (Used in: app/authentication/advanced)",
                    "example": 57600
                  },
                  "session_inactivity_window_minutes": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Session inactivity window in minutes (Used in: app/authentication/advanced)",
                    "example": null
                  },
                  "access_token_lifetime_minutes": {
                    "type": "integer",
                    "description": "Access token lifetime in minutes (Used in: app/authentication/advanced)",
                    "example": 10
                  },
                  "id_token_lifetime_minutes": {
                    "type": "integer",
                    "nullable": true,
                    "description": "ID token lifetime in minutes (Used in: app/authentication/advanced)",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionTimeoutMinutes": {
                      "type": "integer",
                      "description": "Session timeout in minutes",
                      "example": 57600
                    },
                    "sessionInactivityWindowMinutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Session inactivity window in minutes",
                      "example": null
                    },
                    "accessTokenLifetimeMinutes": {
                      "type": "integer",
                      "description": "Access token lifetime in minutes",
                      "example": 10
                    },
                    "idTokenLifetimeMinutes": {
                      "type": "integer",
                      "nullable": true,
                      "description": "ID token lifetime in minutes",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid session configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/test_credentials": {
      "get": {
        "summary": "Get test credentials",
        "description": "Retrieve test accounts and credentials for development and testing purposes",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Test credentials retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Test credential ID",
                            "example": "cmdcweb58007mju0ngl12wedu"
                          },
                          "email": {
                            "type": "string",
                            "description": "Test email address",
                            "example": "test-3352@privy.io"
                          },
                          "otp_code": {
                            "type": "string",
                            "description": "One-time password code for testing",
                            "example": "243838"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "Test phone number",
                            "example": "+1 555 555 4770"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the test credential was created",
                            "example": "2025-07-21T09:23:09.932Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the test credential was last updated",
                            "example": "2025-07-21T09:23:09.932Z"
                          }
                        }
                      },
                      "description": "Array of test credentials"
                    },
                    "email": {
                      "type": "string",
                      "description": "Primary test email address",
                      "example": "test-3352@privy.io"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Primary test phone number",
                      "example": "+1 555 555 4770"
                    },
                    "otpCode": {
                      "type": "string",
                      "description": "Primary OTP code for testing",
                      "example": "243838"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found or no test credentials available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No test credentials found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "post": {
        "summary": "Create test credentials",
        "description": "Create new test accounts and credentials for development and testing purposes",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Empty object or no body required to create test credentials",
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test credentials created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Test credential ID",
                      "example": "cmdpkluyy02rnjv0ikemgf9qs"
                    },
                    "email": {
                      "type": "string",
                      "description": "Generated test email address",
                      "example": "test-3614@privy.io"
                    },
                    "otp_code": {
                      "type": "string",
                      "description": "Generated one-time password code for testing",
                      "example": "208375"
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "Generated test phone number",
                      "example": "+1 555 555 3155"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the test credential was created",
                      "example": "2025-07-30T06:14:07.115Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the test credential was last updated",
                      "example": "2025-07-30T06:14:07.115Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to create test credentials"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/oauth": {
      "get": {
        "summary": "Get OAuth configuration",
        "description": "Get OAuth configuration for a specific provider",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "provider",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "google",
                "apple",
                "twitter",
                "discord",
                "github",
                "tiktok",
                "line",
                "linkedin",
                "spotify",
                "instagram"
              ]
            },
            "description": "OAuth provider name",
            "example": "google"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "editable": {
                      "type": "boolean",
                      "description": "Whether the OAuth configuration is editable",
                      "example": true
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "description": "OAuth provider name",
                          "example": "google"
                        },
                        "client_id": {
                          "type": "string",
                          "description": "OAuth client ID",
                          "example": "1234567890-abcdefghijklmnopqrstuvwxyz.apps.googleusercontent.com"
                        },
                        "client_secret": {
                          "type": "string",
                          "description": "OAuth client secret (masked in response)",
                          "example": "*****************9jkl"
                        },
                        "return_oauth_tokens": {
                          "type": "boolean",
                          "description": "Whether to return OAuth tokens",
                          "example": true
                        },
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth scopes",
                          "example": ["email"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found or OAuth configuration not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OAuth configuration not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "put": {
        "summary": "Configure custom OAuth provider",
        "description": "Configure custom OAuth provider settings including client ID, client secret, and scopes",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "google",
                          "apple",
                          "twitter",
                          "discord",
                          "github",
                          "tiktok",
                          "line",
                          "linkedin",
                          "spotify",
                          "instagram"
                        ],
                        "description": "OAuth provider name",
                        "example": "google"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "OAuth client ID from the provider",
                        "example": "1234567890-abcdefghijklmnopqrstuvwxyz.apps.googleusercontent.com"
                      },
                      "client_secret": {
                        "type": "string",
                        "description": "OAuth client secret from the provider",
                        "example": "ABC123def456GHI789jkl"
                      },
                      "return_oauth_tokens": {
                        "type": "boolean",
                        "description": "Whether to return OAuth tokens to the client",
                        "example": true
                      },
                      "scopes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "OAuth scopes to request",
                        "example": ["email", "profile"]
                      }
                    },
                    "required": ["provider", "client_id", "client_secret"]
                  }
                },
                "required": ["config"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OAuth configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "editable": {
                      "type": "boolean",
                      "description": "Whether the OAuth configuration is editable",
                      "example": true
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "description": "OAuth provider name",
                          "example": "google"
                        },
                        "client_id": {
                          "type": "string",
                          "description": "OAuth client ID",
                          "example": "1234567890-abcdefghijklmnopqrstuvwxyz.apps.googleusercontent.com"
                        },
                        "client_secret": {
                          "type": "string",
                          "description": "OAuth client secret (masked in response)",
                          "example": "*****************9jkl"
                        },
                        "return_oauth_tokens": {
                          "type": "boolean",
                          "description": "Whether to return OAuth tokens",
                          "example": true
                        },
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "OAuth scopes",
                          "example": ["email"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid OAuth configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/smart-wallets": {
      "put": {
        "summary": "Configure smart wallets",
        "description": "Configure smart wallet settings for an app including wallet type, version, and network configurations",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Privy App ID",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether smart wallets are enabled",
                    "example": true
                  },
                  "smart_wallet_type": {
                    "type": "string",
                    "enum": ["coinbase_smart_wallet"],
                    "description": "Type of smart wallet",
                    "example": "coinbase_smart_wallet"
                  },
                  "smart_wallet_version": {
                    "type": "string",
                    "description": "Version of the smart wallet",
                    "example": "1.1"
                  },
                  "configured_networks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chain_id": {
                          "type": "string",
                          "description": "Chain identifier in CAIP-2 format",
                          "example": "eip155:8453"
                        },
                        "paymaster_url": {
                          "type": "string",
                          "description": "Paymaster service URL",
                          "example": "https://api.developer.coinbase.com/rpc/v1/base/69qEA4mm5eg8FCwNAq3dm3UJxrdMAZSO"
                        },
                        "bundler_url": {
                          "type": "string",
                          "description": "Bundler service URL",
                          "example": "https://api.developer.coinbase.com/rpc/v1/base/69qEA4mm5eg8FCwNAq3dm3UJxrdMAZSO"
                        }
                      },
                      "required": ["chain_id", "bundler_url"]
                    },
                    "description": "Network configurations for smart wallets"
                  }
                },
                "required": [
                  "enabled",
                  "smart_wallet_type",
                  "smart_wallet_version",
                  "configured_networks"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Smart wallet configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether smart wallets are enabled",
                      "example": true
                    },
                    "smart_wallet_type": {
                      "type": "string",
                      "description": "Type of smart wallet",
                      "example": "coinbase_smart_wallet"
                    },
                    "smart_wallet_version": {
                      "type": "string",
                      "description": "Version of the smart wallet",
                      "example": "1.1"
                    },
                    "configured_networks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chain_id": {
                            "type": "string",
                            "description": "Chain identifier in CAIP-2 format",
                            "example": "eip155:1"
                          },
                          "paymaster_url": {
                            "type": "string",
                            "nullable": true,
                            "description": "Paymaster service URL",
                            "example": null
                          },
                          "bundler_url": {
                            "type": "string",
                            "description": "Bundler service URL",
                            "example": "https://public.pimlico.io/v2/1/rpc"
                          },
                          "paymaster_context": {
                            "type": "string",
                            "nullable": true,
                            "description": "Paymaster context",
                            "example": null
                          }
                        },
                        "required": ["chain_id", "bundler_url"]
                      },
                      "description": "Network configurations for smart wallets"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid smart wallet configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/users": {
      "post": {
        "summary": "Create user",
        "description": "Create a new user with linked accounts. Optionally pre-generate embedded wallets for the user.",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "linked_accounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Account address (email, wallet address, etc.)",
                          "example": "user@example.com"
                        },
                        "type": {
                          "type": "string",
                          "enum": ["email", "wallet", "farcaster", "passkey"],
                          "description": "Type of linked account",
                          "example": "email"
                        }
                      },
                      "required": ["type"]
                    },
                    "description": "Array of linked accounts for the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID",
                      "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when user was created",
                      "example": 1731974895
                    },
                    "linked_accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Account address",
                            "example": "user@example.com"
                          },
                          "type": {
                            "type": "string",
                            "description": "Account type",
                            "example": "email"
                          },
                          "verified_at": {
                            "type": "integer",
                            "description": "Timestamp when account was verified",
                            "example": 1674788927
                          },
                          "first_verified_at": {
                            "type": "integer",
                            "description": "Timestamp when account was first verified",
                            "example": 1674788927
                          },
                          "latest_verified_at": {
                            "type": "integer",
                            "description": "Timestamp when account was last verified",
                            "example": 1674788927
                          }
                        }
                      }
                    },
                    "mfa_methods": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "MFA method type",
                            "example": "passkey"
                          },
                          "verified_at": {
                            "type": "integer",
                            "description": "Timestamp when MFA was verified",
                            "example": 1741194420
                          }
                        }
                      }
                    },
                    "has_accepted_terms": {
                      "type": "boolean",
                      "description": "Whether user has accepted terms",
                      "example": true
                    },
                    "is_guest": {
                      "type": "boolean",
                      "description": "Whether user is a guest",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid linked accounts"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "get": {
        "summary": "Get all users",
        "description": "Get a list of all users in the app",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of users to return",
            "example": 50
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of users to skip",
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "User ID",
                            "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
                          },
                          "created_at": {
                            "type": "integer",
                            "description": "Timestamp when user was created",
                            "example": 1731974895
                          },
                          "linked_accounts": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of users",
                      "example": 150
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Get a user by user ID",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID",
            "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID",
                      "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when user was created",
                      "example": 1731974895
                    },
                    "linked_accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Account address",
                            "example": "user@example.com"
                          },
                          "type": {
                            "type": "string",
                            "description": "Account type",
                            "example": "email"
                          },
                          "verified_at": {
                            "type": "integer",
                            "description": "Timestamp when account was verified",
                            "example": 1674788927
                          }
                        }
                      }
                    },
                    "mfa_methods": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "MFA method type",
                            "example": "passkey"
                          },
                          "verified_at": {
                            "type": "integer",
                            "description": "Timestamp when MFA was verified",
                            "example": 1741194420
                          }
                        }
                      }
                    },
                    "has_accepted_terms": {
                      "type": "boolean",
                      "description": "Whether user has accepted terms",
                      "example": true
                    },
                    "is_guest": {
                      "type": "boolean",
                      "description": "Whether user is a guest",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user by user ID",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID",
            "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/users/get-by-custom-auth": {
      "post": {
        "summary": "Get user by custom auth ID",
        "description": "Get a user by custom authentication ID",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_auth_id": {
                    "type": "string",
                    "description": "Custom authentication ID",
                    "example": "custom_user_123"
                  }
                },
                "required": ["custom_auth_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID",
                      "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when user was created",
                      "example": 1731974895
                    },
                    "linked_accounts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/users/get-by-email": {
      "post": {
        "summary": "Get user by email address",
        "description": "Get a user by email address",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address",
                    "example": "user@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID",
                      "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when user was created",
                      "example": 1731974895
                    },
                    "linked_accounts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/users/get-by-wallet": {
      "post": {
        "summary": "Get user by wallet address",
        "description": "Get a user by wallet address",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wallet_address": {
                    "type": "string",
                    "description": "Wallet address",
                    "example": "0xE6bFb4137F3A8C069F98cc775f324A84FE45FdFF"
                  }
                },
                "required": ["wallet_address"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID",
                      "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp when user was created",
                      "example": 1731974895
                    },
                    "linked_accounts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/users/{userId}/custom-metadata": {
      "post": {
        "summary": "Add custom metadata",
        "description": "Add custom metadata to a user",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID",
            "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "description": "Custom metadata to add to the user",
                    "example": {
                      "preferences": {
                        "theme": "dark",
                        "notifications": true
                      },
                      "profile": {
                        "bio": "Software developer"
                      }
                    }
                  }
                },
                "required": ["metadata"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom metadata added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid metadata"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/users/{userId}/pregenerate-wallets": {
      "post": {
        "summary": "Pregenerate wallets",
        "description": "Pregenerate embedded wallets for a user",
        "tags": ["Users"],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID",
            "example": "did:privy:cm3np4u9j001rc8b73seqmqqk"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wallet_config": {
                    "type": "object",
                    "properties": {
                      "chain_id": {
                        "type": "string",
                        "description": "Chain ID for the wallet",
                        "example": "eip155:1"
                      },
                      "wallet_type": {
                        "type": "string",
                        "enum": ["embedded"],
                        "description": "Type of wallet to generate",
                        "example": "embedded"
                      }
                    },
                    "required": ["chain_id", "wallet_type"]
                  }
                },
                "required": ["wallet_config"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallets pregenerated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wallets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Wallet ID",
                            "example": "wallet_123"
                          },
                          "address": {
                            "type": "string",
                            "description": "Wallet address",
                            "example": "0xE6bFb4137F3A8C069F98cc775f324A84FE45FdFF"
                          },
                          "chain_id": {
                            "type": "string",
                            "description": "Chain ID",
                            "example": "eip155:1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid wallet configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api.privy.io"
          }
        ]
      }
    },
    "/v1/apps/{appId}/funding": {
      "put": {
        "summary": "Update app funding configuration",
        "description": "Updates the funding configuration for an app, including payment methods (card, exchange, external wallets) and payment providers (MoonPay, Coinbase). This endpoint allows toggling specific funding methods and providers.",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "funding_config": {
                    "type": "object",
                    "properties": {
                      "methods": {
                        "type": "object",
                        "properties": {
                          "card_enabled": {
                            "type": "boolean",
                            "description": "Enable/disable card payments",
                            "example": true
                          },
                          "exchange_enabled": {
                            "type": "boolean",
                            "description": "Enable/disable exchange transfers",
                            "example": true
                          },
                          "external_wallets_enabled": {
                            "type": "boolean",
                            "description": "Enable/disable external wallet transfers",
                            "example": false
                          }
                        },
                        "required": [
                          "card_enabled",
                          "exchange_enabled",
                          "external_wallets_enabled"
                        ]
                      },
                      "moonpay_enabled": {
                        "type": "boolean",
                        "description": "Enable/disable MoonPay as payment provider",
                        "example": true
                      },
                      "coinbase_enabled": {
                        "type": "boolean",
                        "description": "Enable/disable Coinbase as payment provider",
                        "example": false
                      }
                    },
                    "required": [
                      "methods",
                      "moonpay_enabled",
                      "coinbase_enabled"
                    ]
                  }
                },
                "required": ["funding_config"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funding configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "cmcx1p0y50315i80ldhmlcnmm"
                    },
                    "name": {
                      "type": "string",
                      "example": "My App"
                    },
                    "logo_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "icon_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "terms_and_conditions_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "privacy_policy_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "require_users_accept_terms": {
                      "type": "boolean",
                      "nullable": true,
                      "example": null
                    },
                    "theme": {
                      "type": "string",
                      "example": "System"
                    },
                    "accent_color": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "show_wallet_login_first": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowed_domains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "allowed_native_app_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "allowed_native_app_url_schemes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "wallet_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "email_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "sms_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "guest_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "solana_wallet_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "telegram_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "disable_plus_emails": {
                      "type": "boolean",
                      "example": false
                    },
                    "google_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "twitter_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "discord_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "github_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "tiktok_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "line_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "linkedin_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "apple_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "spotify_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "instagram_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "farcaster_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "passkey_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "passkeys_for_signup_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "custom_jwt_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowlist_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "denylist_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "allowlist_config": {
                      "type": "object",
                      "properties": {
                        "error_title": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "error_detail": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_text": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_link": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    "wallet_connect_cloud_project_id": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "custom_api_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "embedded_wallet_config": {
                      "type": "object",
                      "properties": {
                        "create_on_login": {
                          "type": "string",
                          "example": "off"
                        },
                        "ethereum": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            }
                          }
                        },
                        "solana": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            }
                          }
                        },
                        "user_owned_recovery_options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "recovery_share_management": {
                          "type": "string",
                          "example": "user-controlled-server-wallets-only"
                        }
                      }
                    },
                    "funding_config": {
                      "type": "object",
                      "properties": {
                        "default_recommended_currency": {
                          "type": "object",
                          "properties": {
                            "chain": {
                              "type": "string",
                              "example": "eip155:1"
                            },
                            "asset": {
                              "type": "string",
                              "example": "native-currency"
                            }
                          }
                        },
                        "default_recommended_amount": {
                          "type": "string",
                          "example": "0.0001"
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["coinbase-onramp"]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "method": {
                                "type": "string",
                                "example": "exchange"
                              },
                              "provider": {
                                "type": "string",
                                "example": "coinbase"
                              }
                            }
                          }
                        },
                        "prompt_funding_on_wallet_creation": {
                          "type": "boolean",
                          "example": false
                        },
                        "cross_chain_bridging_enabled": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "max_linked_wallets_per_user": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "farcaster_link_wallets_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "whatsapp_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "created_at": {
                      "type": "integer",
                      "example": 1753421993
                    },
                    "updated_at": {
                      "type": "integer",
                      "example": 1753421993
                    },
                    "env": {
                      "type": "string",
                      "example": "dev"
                    },
                    "usersCount": {
                      "type": "integer",
                      "example": -1
                    },
                    "development_apps": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": []
                    },
                    "production_app": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "cookie_auth_enabled": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid funding configuration"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/funding/settings": {
      "put": {
        "summary": "Update app funding settings",
        "description": "Updates the funding settings for an app, including default recommended currency (chain and asset), default recommended amount, prompt funding on wallet creation, and cross-chain bridging settings. This endpoint is used in the app/user management/account funding/settings tab.",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "funding_config": {
                    "type": "object",
                    "properties": {
                      "default_recommended_currency": {
                        "type": "object",
                        "properties": {
                          "chain": {
                            "type": "string",
                            "description": "Chain identifier (e.g., 'solana', 'eip155:1', 'eip155:137')",
                            "example": "solana"
                          },
                          "asset": {
                            "type": "string",
                            "description": "Asset type (e.g., 'native-currency', 'USDC')",
                            "example": "native-currency"
                          }
                        },
                        "required": ["chain", "asset"]
                      },
                      "default_recommended_amount": {
                        "type": "string",
                        "description": "Default recommended funding amount",
                        "example": "0.0001"
                      },
                      "prompt_funding_on_wallet_creation": {
                        "type": "boolean",
                        "description": "Whether to prompt funding on wallet creation",
                        "example": false
                      },
                      "cross_chain_bridging_enabled": {
                        "type": "boolean",
                        "description": "Whether cross-chain bridging is enabled",
                        "example": false
                      }
                    },
                    "required": [
                      "default_recommended_currency",
                      "default_recommended_amount",
                      "prompt_funding_on_wallet_creation",
                      "cross_chain_bridging_enabled"
                    ]
                  }
                },
                "required": ["funding_config"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funding settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "cmcx1p0y50315i80ldhmlcnmm"
                    },
                    "name": {
                      "type": "string",
                      "example": "My App"
                    },
                    "logo_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "icon_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "terms_and_conditions_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "privacy_policy_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "require_users_accept_terms": {
                      "type": "boolean",
                      "nullable": true,
                      "example": null
                    },
                    "theme": {
                      "type": "string",
                      "example": "System"
                    },
                    "accent_color": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "show_wallet_login_first": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowed_domains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "allowed_native_app_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "allowed_native_app_url_schemes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "wallet_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "email_auth": {
                      "type": "boolean",
                      "example": true
                    },
                    "sms_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "guest_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "solana_wallet_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "telegram_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "disable_plus_emails": {
                      "type": "boolean",
                      "example": false
                    },
                    "google_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "twitter_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "discord_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "github_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "tiktok_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "line_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "linkedin_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "apple_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "spotify_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "instagram_oauth": {
                      "type": "boolean",
                      "example": false
                    },
                    "farcaster_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "passkey_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "passkeys_for_signup_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "custom_jwt_auth": {
                      "type": "boolean",
                      "example": false
                    },
                    "allowlist_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "denylist_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "allowlist_config": {
                      "type": "object",
                      "properties": {
                        "error_title": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "error_detail": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_text": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "cta_link": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        }
                      }
                    },
                    "wallet_connect_cloud_project_id": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "custom_api_url": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "embedded_wallet_config": {
                      "type": "object",
                      "properties": {
                        "create_on_login": {
                          "type": "string",
                          "example": "off"
                        },
                        "ethereum": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            }
                          }
                        },
                        "solana": {
                          "type": "object",
                          "properties": {
                            "create_on_login": {
                              "type": "string",
                              "example": "off"
                            }
                          }
                        },
                        "user_owned_recovery_options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "recovery_share_management": {
                          "type": "string",
                          "example": "user-controlled-server-wallets-only"
                        }
                      }
                    },
                    "funding_config": {
                      "type": "object",
                      "properties": {
                        "default_recommended_currency": {
                          "type": "object",
                          "properties": {
                            "chain": {
                              "type": "string",
                              "example": "solana"
                            },
                            "asset": {
                              "type": "string",
                              "example": "native-currency"
                            }
                          }
                        },
                        "default_recommended_amount": {
                          "type": "string",
                          "example": "0.0001"
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["coinbase-onramp"]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "method": {
                                "type": "string",
                                "example": "exchange"
                              },
                              "provider": {
                                "type": "string",
                                "example": "coinbase"
                              }
                            }
                          }
                        },
                        "prompt_funding_on_wallet_creation": {
                          "type": "boolean",
                          "example": false
                        },
                        "cross_chain_bridging_enabled": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "max_linked_wallets_per_user": {
                      "type": "integer",
                      "nullable": true,
                      "example": null
                    },
                    "farcaster_link_wallets_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "whatsapp_enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "created_at": {
                      "type": "integer",
                      "example": 1753421993
                    },
                    "updated_at": {
                      "type": "integer",
                      "example": 1753421993
                    },
                    "env": {
                      "type": "string",
                      "example": "dev"
                    },
                    "usersCount": {
                      "type": "integer",
                      "example": -1
                    },
                    "development_apps": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": []
                    },
                    "production_app": {
                      "type": "object",
                      "nullable": true,
                      "example": null
                    },
                    "cookie_auth_enabled": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid funding settings"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/cross-app/providers": {
      "post": {
        "summary": "Enable or disable cross-app provider integration",
        "description": "Enables or disables integration with another app as a provider. This endpoint is used in the user management/integrations tab to manage cross-app connections.",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "App ID",
            "example": "cmcx1p0y50315i80ldhmlcnmm"
          },
          {
            "name": "privy-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of your Privy app",
            "example": "cla04x0d00002nyb6oofp5dqh"
          },
          {
            "name": "privy-client",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Privy client identifier for dashboard requests",
            "example": "privy-dashboard:1.0.0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider_app_id": {
                    "type": "string",
                    "description": "ID of the provider app to enable/disable integration with",
                    "example": "cm04asygd041fmry9zmcyn5o5"
                  },
                  "enable_connection": {
                    "type": "boolean",
                    "description": "Whether to enable (true) or disable (false) the connection with the provider app",
                    "example": true
                  }
                },
                "required": ["provider_app_id", "enable_connection"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Cross-app provider integration updated successfully",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid provider app ID"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "App or provider app not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "App not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
